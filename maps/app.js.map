{"version":3,"sources":["app.module.js","components/data/data.service.js","components/storage/storage.factory.js","app.config.js","app.js","components/api/api.factory.js","components/app/app.controller.js","components/lodash/lodash.factory.js","components/quiz/quiz.component.js","components/quiz/quiz.factory.js","components/stats/stats.component.js","components/stats/stats.factory.js"],"names":["_classCallCheck","instance","Constructor","TypeError","angular","module","dotaQuizConfig","$stateProvider","$urlRouterProvider","appState","url","controller","templateUrl","state","otherwise","$inject","config","API","$resource","getQuizResource","DOMAIN","vm","Quiz","factory","AppController","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","items","name","requirements","DataService","_","this","itemsWithRequirements","filter","USER_API","value","_this","console","log","query","$promise","then","data","Promise","resolve","item","cloneDeep","sample","wrong","sampleSize","reject","quiz","forEach","e","getItem","find","toLowerCase","Error","service","Lodash","$window","QuizController","QuizFactory","activate","start","select","unselect","component","$log","$rootScope","StatsFactory","StorageService","isDefined","getData","info","assign","_fetchQuiz","_reset","reset","selected","answers","unknown","_answerComplete","_validateAnswer","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","choices","Symbol","iterator","next","done","err","_unknownObject","getRandomQuiz","_populateData","$digest","icon","_getIconName","map","req","shuffle","concat","c","setData","iconName","replace","complete","answer","sortBy","requirement","answerCorrect","isEqual","_handleCorrectAnswer","_handleIncorrectAnswer","correct","guessesLeft","incorrect","alert","getScore","alt","StatsController","isUndefined","getStats","setStats","_DefaultStats","guesses","inRow","base","bonus","score","$localStorage","stats"],"mappings":"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","file":"app.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('dotaQuiz', [\n    'ui.router',\n    'ngResource',\n    'ngStorage',\n    'Lodash'\n  ]);\n\n})();\n","(function() {\n\n  const items = [\n    {\n      \"name\": \"Abyssal Blade\",\n      \"requirements\": [\n        \"Sacred Relic\",\n        \"Skull Basher\"\n      ]\n    },\n    {\n      \"name\": \"Aether Lens\",\n      \"requirements\": [\n        \"Recipe\",\n        \"Energy Booster\",\n        \"Ring of Health\"\n      ]\n    },\n    {\n      \"name\": \"Aghanim's Scepter\",\n      \"requirements\": [\n        \"Point Booster\",\n        \"Ogre Club\",\n        \"Blade of Alacrity\",\n        \"Staff of Wizardry\"\n      ]\n    },\n    {\n      \"name\": \"Arcane Boots\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Energy Booster\"\n      ]\n    },\n    {\n      \"name\": \"Armlet of Mordiggian\",\n      \"requirements\": [\n        \"Helm of Iron Will\",\n        \"Gloves of Haste\",\n        \"Blades of Attack\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Assault Cuirass\",\n      \"requirements\": [\n        \"Platemail\",\n        \"Hyperstone\",\n        \"Chainmail\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Band of Elvenskin\"\n    },\n    {\n      \"name\": \"Battle Fury\",\n      \"requirements\": [\n        \"Claymore\",\n        \"Broadsword\",\n        \"Perseverance\",\n        \"Quelling Blade\"\n      ]\n    },\n    {\n      \"name\": \"Belt of Strength\"\n    },\n    {\n      \"name\": \"Black King Bar\",\n      \"requirements\": [\n        \"Mithril Hammer\",\n        \"Ogre Club\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Blade Mail\",\n      \"requirements\": [\n        \"Broadsword\",\n        \"Chainmail\",\n        \"Robe of the Magi\"\n      ]\n    },\n    {\n      \"name\": \"Blade of Alacrity\"\n    },\n    {\n      \"name\": \"Blades of Attack\"\n    },\n    {\n      \"name\": \"Blink Dagger\"\n    },\n    {\n      \"name\": \"Bloodstone\",\n      \"requirements\": [\n        \"Soul Booster\",\n        \"Soul Ring\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Boots of Speed\"\n    },\n    {\n      \"name\": \"Boots of Travel\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Bracer\",\n      \"requirements\": [\n        \"Circlet\",\n        \"Gauntlets of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Broadsword\"\n    },\n    {\n      \"name\": \"Buckler\",\n      \"requirements\": [\n        \"Chainmail\",\n        \"Iron Branch\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Butterfly\",\n      \"requirements\": [\n        \"Eaglesong\",\n        \"Talisman of Evasion\",\n        \"Quarterstaff\"\n      ]\n    },\n    {\n      \"name\": \"Chainmail\"\n    },\n    {\n      \"name\": \"Circlet\"\n    },\n    {\n      \"name\": \"Claymore\"\n    },\n    {\n      \"name\": \"Cloak\"\n    },\n    {\n      \"name\": \"Crimson Guard\",\n      \"requirements\": [\n        \"Vanguard\",\n        \"Buckler\",\n        \" Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Crystalys\",\n      \"requirements\": [\n        \"Broadsword\",\n        \"Blades of Attack\",\n        \" Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Daedalus\",\n      \"requirements\": [\n        \"Crystalys\",\n        \"Demon Edge\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Dagon\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Null Talisman\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Demon Edge\"\n    },\n    {\n      \"name\": \"Desolator\",\n      \"requirements\": [\n        \"Mithril Hammer\",\n        \"Mithril Hammer\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Diffusal Blade\",\n      \"requirements\": [\n        \"Blade of Alacrity\",\n        \"Blade of Alacrity\",\n        \"Robe of the Magi\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Divine Rapier\",\n      \"requirements\": [\n        \"Sacred Relic\",\n        \"Demon Edge\"\n      ]\n    },\n    {\n      \"name\": \"Dragon Lance\",\n      \"requirements\": [\n        \"Ogre Club\",\n        \"Quarterstaff\"\n      ]\n    },\n    {\n      \"name\": \"Drum of Endurance\",\n      \"requirements\": [\n        \"Bracer\",\n        \"Robe of the Magi\",\n        \" Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Eaglesong\"\n    },\n    {\n      \"name\": \"Energy Booster\"\n    },\n    {\n      \"name\": \"Ethereal Blade\",\n      \"requirements\": [\n        \"Eaglesong\",\n        \"Ghost Scepter\"\n      ]\n    },\n    {\n      \"name\": \"Eul's Scepter of Divinity\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Sage's Mask\",\n        \"Void Stone\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Eye of Skadi\",\n      \"requirements\": [\n        \"Ultimate Orb\",\n        \"Ultimate Orb\",\n        \"Point Booster\",\n        \"Orb of Venom\"\n      ]\n    },\n    {\n      \"name\": \"Force Staff\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Ring of Regen\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Gauntlets of Strength\"\n    },\n    {\n      \"name\": \"Ghost Scepter\"\n    },\n    {\n      \"name\": \"Glimmer Cape\",\n      \"requirements\": [\n        \"Shadow Amulet\",\n        \"Cloak\"\n      ]\n    },\n    {\n      \"name\": \"Gloves of Haste\"\n    },\n    {\n      \"name\": \"Guardian Greaves\",\n      \"requirements\": [\n        \"Mekansm\",\n        \"Arcane Boots\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Hand of Midas\",\n      \"requirements\": [\n        \"Gloves of Haste\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Headdress\",\n      \"requirements\": [\n        \"Ring of Regen\",\n        \"Iron Branch\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Heart of Tarrasque\",\n      \"requirements\": [\n        \"Reaver\",\n        \"Vitality Booster\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Heaven's Halberd\",\n      \"requirements\": [\n        \"Sange\",\n        \"Talisman of Evasion\"\n      ]\n    },\n    {\n      \"name\": \"Helm of Iron Will\"\n    },\n    {\n      \"name\": \"Helm of The Dominator\",\n      \"requirements\": [\n        \"Helm of Iron Will\",\n        \"Morbid Mask\"\n      ]\n    },\n    {\n      \"name\": \"Hood of Defiance\",\n      \"requirements\": [\n        \"Ring of Health\",\n        \"Cloak\",\n        \"Ring of Regen\",\n        \"Ring of Regen\"\n      ]\n    },\n    {\n      \"name\": \"Hyperstone\"\n    },\n    {\n      \"name\": \"Iron Branch\"\n    },\n    {\n      \"name\": \"Iron Talon\",\n      \"requirements\": [\n        \"Quelling Blade\",\n        \"Ring of Protection\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Javelin\"\n    },\n    {\n      \"name\": \"Linken's Sphere\",\n      \"requirements\": [\n        \"Perseverance\",\n        \"Ultimate Orb\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Lotus Orb\",\n      \"requirements\": [\n        \"Perseverance\",\n        \"Platemail\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Maelstrom\",\n      \"requirements\": [\n        \"Mithril Hammer\",\n        \"Gloves of Haste\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Magic Stick\"\n    },\n    {\n      \"name\": \"Magic Wand\",\n      \"requirements\": [\n        \"Magic Stick\",\n        \"Iron Branch\",\n        \"Iron Branch\",\n        \"Circlet\"\n      ]\n    },\n    {\n      \"name\": \"Manta Style\",\n      \"requirements\": [\n        \"Ultimate Orb\",\n        \"Yasha\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Mantle of Intelligence\"\n    },\n    {\n      \"name\": \"Mask of Madness\",\n      \"requirements\": [\n        \"Morbid Mask\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Medallion of Courage\",\n      \"requirements\": [\n        \"Chainmail\",\n        \"Sage's Mask\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Mekansm\",\n      \"requirements\": [\n        \"Buckler\",\n        \"Headdress\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Mithril Hammer\"\n    },\n    {\n      \"name\": \"Mjollnir\",\n      \"requirements\": [\n        \"Hyperstone\",\n        \"Maelstrom\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Monkey King Bar\",\n      \"requirements\": [\n        \"Javelin\",\n        \"Javelin\",\n        \"Demon Edge\"\n      ]\n    },\n    {\n      \"name\": \"Moon Shard\",\n      \"requirements\": [\n        \"Hyperstone\",\n        \"Hyperstone\"\n      ]\n    },\n    {\n      \"name\": \"Morbid Mask\"\n    },\n    {\n      \"name\": \"Mystic Staff\"\n    },\n    {\n      \"name\": \"Necronomicon\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Belt of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Null Talisman\",\n      \"requirements\": [\n        \"Circlet\",\n        \"Mantle of Intelligence\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Oblivion Staff\",\n      \"requirements\": [\n        \"Quarterstaff\",\n        \"Robe of the Magi\",\n        \"Sage's Mask\"\n      ]\n    },\n    {\n      \"name\": \"Octarine Core\",\n      \"requirements\": [\n        \"Mystic Staff\",\n        \"Soul Booster\"\n      ]\n    },\n    {\n      \"name\": \"Ogre Club\"\n    },\n    {\n      \"name\": \"Orb of Venom\"\n    },\n    {\n      \"name\": \"Orchid Malevolence\",\n      \"requirements\": [\n        \"Oblivion Staff\",\n        \"Oblivion Staff\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Perseverance\",\n      \"requirements\": [\n        \"Ring of Health\",\n        \"Void Stone\"\n      ]\n    },\n    {\n      \"name\": \"Phase Boots\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Blades of Attack\",\n        \"Blades of Attack\"\n      ]\n    },\n    {\n      \"name\": \"Pipe of Insight\",\n      \"requirements\": [\n        \"Hood of Defiance\",\n        \"Headdress\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Platemail\"\n    },\n    {\n      \"name\": \"Point Booster\"\n    },\n    {\n      \"name\": \"Poor Man's Shield\",\n      \"requirements\": [\n        \"Stout Shield\",\n        \"Slippers of Agility\",\n        \"Slippers of Agility\"\n      ]\n    },\n    {\n      \"name\": \"Power Treads Agi\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Gloves of Haste\",\n        \"Band of Elvenskin\"\n      ]\n    },\n    {\n      \"name\": \"Power Treads Str\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Gloves of Haste\",\n        \"Belt of Strength\"\n      ]\n    },\n    {\n      \"name\": \"Power Treads Int\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Gloves of Haste\",\n        \"Robe of the Magi\"\n      ]\n    },\n    {\n      \"name\": \"Quarterstaff\"\n    },\n    {\n      \"name\": \"Quelling Blade\"\n    },\n    {\n      \"name\": \"Radiance\",\n      \"requirements\": [\n        \"Sacred Relic\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Reaver\"\n    },\n    {\n      \"name\": \"Recipe\"\n    },\n    {\n      \"name\": \"Refresher Orb\",\n      \"requirements\": [\n        \"Perseverance\",\n        \"Perseverance\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Ring of Aquila\",\n      \"requirements\": [\n        \"Wraith Band\",\n        \"Ring of Basilius\"\n      ]\n    },\n    {\n      \"name\": \"Ring of Basilius\",\n      \"requirements\": [\n        \"Sage's Mask\",\n        \"Ring of Protection\"\n      ]\n    },\n    {\n      \"name\": \"Ring of Health\"\n    },\n    {\n      \"name\": \"Ring of Protection\"\n    },\n    {\n      \"name\": \"Ring of Regen\"\n    },\n    {\n      \"name\": \"Robe of The Magi\"\n    },\n    {\n      \"name\": \"Rod of Atos\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Staff of Wizardry\",\n        \"Vitality Booster\"\n      ]\n    },\n    {\n      \"name\": \"Sacred Relic\"\n    },\n    {\n      \"name\": \"Sage's Mask\"\n    },\n    {\n      \"name\": \"Sange\",\n      \"requirements\": [\n        \"Ogre Club\",\n        \"Belt of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Sange And Yasha\",\n      \"requirements\": [\n        \"Sange\",\n        \"Yasha\"\n      ]\n    },\n    {\n      \"name\": \"Satanic\",\n      \"requirements\": [\n        \"Reaver\",\n        \"Helm of the Dominator\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Scythe of Vyse\",\n      \"requirements\": [\n        \"Mystic Staff\",\n        \"Ultimate Orb\",\n        \"Void Stone\"\n      ]\n    },\n    {\n      \"name\": \"Shadow Amulet\"\n    },\n    {\n      \"name\": \"Shadow Blade\",\n      \"requirements\": [\n        \"Claymore\",\n        \"Shadow Amulet\"\n      ]\n    },\n    {\n      \"name\": \"Shiva's Guard\",\n      \"requirements\": [\n        \"Mystic Staff\",\n        \"Platemail\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Silver Edge\",\n      \"requirements\": [\n        \"Shadow Blade\",\n        \"Sange\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Skull Basher\",\n      \"requirements\": [\n        \"Javelin\",\n        \"Belt of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Slippers of Agility\"\n    },\n    {\n      \"name\": \"Solar Crest\",\n      \"requirements\": [\n        \"Medallion of Courage\",\n        \"Talisman of Evasion\"\n      ]\n    },\n    {\n      \"name\": \"Soul Booster\",\n      \"requirements\": [\n        \"Point Booster\",\n        \"Vitality Booster\",\n        \"Energy Booster\"\n      ]\n    },\n    {\n      \"name\": \"Soul Ring\",\n      \"requirements\": [\n        \"Ring of Regen\",\n        \"Sage's Mask\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Staff of Wizardry\"\n    },\n    {\n      \"name\": \"Stout Shield\"\n    },\n    {\n      \"name\": \"Talisman of Evasion\"\n    },\n    {\n      \"name\": \"Tranquil Boots\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Ring of Protection\",\n        \"Ring of Regen\"\n      ]\n    },\n    {\n      \"name\": \"Ultimate Orb\"\n    },\n    {\n      \"name\": \"Urn of Shadows\",\n      \"requirements\": [\n        \"Sage's Mask\",\n        \"Gauntlets of Strength\",\n        \"Gauntlets of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Vanguard\",\n      \"requirements\": [\n        \"Ring of Health\",\n        \"Vitality Booster\",\n        \"Stout Shield\"\n      ]\n    },\n    {\n      \"name\": \"Veil of Discord\",\n      \"requirements\": [\n        \"Helm of Iron Will\",\n        \"Null Talisman\",\n        \"Robe of the Magi\",\n        \"Robe of the Magi\"\n      ]\n    },\n    {\n      \"name\": \"Vitality Booster\"\n    },\n    {\n      \"name\": \"Vladmir's Offering\",\n      \"requirements\": [\n        \"Morbid Mask\",\n        \"Ring of Basilius\",\n        \"Headdress\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Void Stone\"\n    },\n    {\n      \"name\": \"Wraith Band\",\n      \"requirements\": [\n        \"Circlet\",\n        \"Slippers of Agility\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Yasha\",\n      \"requirements\": [\n        \"Blade of Alacrity\",\n        \"Band of Elvenskin\",\n        \"Recipe\"\n      ]\n    }\n  ];\n\n  class DataService {\n    constructor(_, API) {\n      this._ = _;\n      this.API = API;\n      this.items = items;\n      this.itemsWithRequirements = this.items.filter(i => i.requirements && i.requirements.length > 0);\n\n      this.USER_API = false;\n    }\n\n    getRandomQuiz() {\n      if (this.USER_API) {\n        console.log('getting random quiz from api...');\n        return this.API.Quiz.query().$promise.then(data => data[0]);\n      } else {\n        console.log('getting random quiz from local...');\n        return new Promise(resolve => {\n          const item = _.cloneDeep(this._.sample(this.itemsWithRequirements));\n\n          const wrong = _.cloneDeep(this._.sampleSize(this._.reject(this.items, i => i.name === item.name), 9 - item.requirements.length));\n\n          const quiz = {\n            target: item,\n            wrong: wrong\n          }\n\n          quiz.target.requirements.forEach((e, i) => {\n            quiz.target.requirements[i] = this.getItem(e);\n          });\n\n          resolve(quiz);\n        });\n      }\n    }\n\n    getItem(name) {\n      const item = _.cloneDeep(this._.find(this.items, i => i.name.toLowerCase() === name.toLowerCase()));\n\n      if (!item) {\n        throw new Error(`Item not found: ${name}`);\n      }\n\n      return item;\n    }\n  }\n\n  angular\n    .module('dotaQuiz')\n    .service('DataService', DataService);\n\n})();\n","(function() {\n\n  class StorageService {\n   constructor($localStorage) {\n     this.$localStorage = $localStorage;\n   }\n\n   getStats() {\n     return this.$localStorage.stats;\n   }\n\n   setStats(stats) {\n     this.$localStorage.stats = stats;\n   }\n\n   deleteStats() {\n     delete this.$localStorage.stats;\n   }\n\n   getData() {\n     return this.$localStorage.data;\n   }\n\n   setData(data) {\n     this.$localStorage.data = data;\n   }\n\n   deleteData() {\n     delete this.$localStorage.data;\n   }\n }\n\n  angular\n    .module('dotaQuiz')\n    .service('StorageService', StorageService);\n\n})();\n","(function() {\n\n  angular.module('dotaQuiz')\n    .config(dotaQuizConfig);\n\n  function dotaQuizConfig($stateProvider, $urlRouterProvider) {\n    // Ionic uses AngularUI Router which uses the concept of states\n    // Learn more here: https://github.com/angular-ui/ui-router\n    // Set up the various states which the app can be in.\n    // Each state's controller can be found in controllers.js\n\n    const appState = {\n      url: '/',\n      controller: 'AppController as appCtrl',\n      templateUrl: 'app/app.html'\n    }\n\n    $stateProvider\n      .state('app', appState);\n\n    // if none of the above states are matched, use this as the fallback\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n","'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('dotaQuiz', ['ui.router', 'ngResource', 'ngStorage', 'Lodash']);\n})();\n'use strict';\n\n(function () {\n\n  dotaQuizConfig.$inject = [\"$stateProvider\", \"$urlRouterProvider\"];\n  angular.module('dotaQuiz').config(dotaQuizConfig);\n\n  function dotaQuizConfig($stateProvider, $urlRouterProvider) {\n    // Ionic uses AngularUI Router which uses the concept of states\n    // Learn more here: https://github.com/angular-ui/ui-router\n    // Set up the various states which the app can be in.\n    // Each state's controller can be found in controllers.js\n\n    var appState = {\n      url: '/',\n      controller: 'AppController as appCtrl',\n      templateUrl: 'app/app.html'\n    };\n\n    $stateProvider.state('app', appState);\n\n    // if none of the above states are matched, use this as the fallback\n    $urlRouterProvider.otherwise('/');\n  }\n})();\n'use strict';\n\n(function () {\n\n  API.$inject = [\"$resource\"];\n  angular.module('dotaQuiz').factory('API', API);\n\n  function API($resource) {\n    var DOMAIN = '/api';\n\n    var vm = {\n      Quiz: getQuizResource()\n    };\n\n    return vm;\n\n    ///////////////////\n\n    function getQuizResource() {\n      return $resource(DOMAIN + '/quiz/random');\n    }\n  }\n})();\n'use strict';\n\n(function () {\n\n  angular.module('dotaQuiz').controller('AppController', AppController);\n\n  function AppController() {}\n})();\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function () {\n\n  var items = [{\n    \"name\": \"Abyssal Blade\",\n    \"requirements\": [\"Sacred Relic\", \"Skull Basher\"]\n  }, {\n    \"name\": \"Aether Lens\",\n    \"requirements\": [\"Recipe\", \"Energy Booster\", \"Ring of Health\"]\n  }, {\n    \"name\": \"Aghanim's Scepter\",\n    \"requirements\": [\"Point Booster\", \"Ogre Club\", \"Blade of Alacrity\", \"Staff of Wizardry\"]\n  }, {\n    \"name\": \"Arcane Boots\",\n    \"requirements\": [\"Boots of Speed\", \"Energy Booster\"]\n  }, {\n    \"name\": \"Armlet of Mordiggian\",\n    \"requirements\": [\"Helm of Iron Will\", \"Gloves of Haste\", \"Blades of Attack\", \"Recipe\"]\n  }, {\n    \"name\": \"Assault Cuirass\",\n    \"requirements\": [\"Platemail\", \"Hyperstone\", \"Chainmail\", \"Recipe\"]\n  }, {\n    \"name\": \"Band of Elvenskin\"\n  }, {\n    \"name\": \"Battle Fury\",\n    \"requirements\": [\"Claymore\", \"Broadsword\", \"Perseverance\", \"Quelling Blade\"]\n  }, {\n    \"name\": \"Belt of Strength\"\n  }, {\n    \"name\": \"Black King Bar\",\n    \"requirements\": [\"Mithril Hammer\", \"Ogre Club\", \"Recipe\"]\n  }, {\n    \"name\": \"Blade Mail\",\n    \"requirements\": [\"Broadsword\", \"Chainmail\", \"Robe of the Magi\"]\n  }, {\n    \"name\": \"Blade of Alacrity\"\n  }, {\n    \"name\": \"Blades of Attack\"\n  }, {\n    \"name\": \"Blink Dagger\"\n  }, {\n    \"name\": \"Bloodstone\",\n    \"requirements\": [\"Soul Booster\", \"Soul Ring\", \"Recipe\"]\n  }, {\n    \"name\": \"Boots of Speed\"\n  }, {\n    \"name\": \"Boots of Travel\",\n    \"requirements\": [\"Boots of Speed\", \"Recipe\"]\n  }, {\n    \"name\": \"Bracer\",\n    \"requirements\": [\"Circlet\", \"Gauntlets of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Broadsword\"\n  }, {\n    \"name\": \"Buckler\",\n    \"requirements\": [\"Chainmail\", \"Iron Branch\", \"Recipe\"]\n  }, {\n    \"name\": \"Butterfly\",\n    \"requirements\": [\"Eaglesong\", \"Talisman of Evasion\", \"Quarterstaff\"]\n  }, {\n    \"name\": \"Chainmail\"\n  }, {\n    \"name\": \"Circlet\"\n  }, {\n    \"name\": \"Claymore\"\n  }, {\n    \"name\": \"Cloak\"\n  }, {\n    \"name\": \"Crimson Guard\",\n    \"requirements\": [\"Vanguard\", \"Buckler\", \" Recipe\"]\n  }, {\n    \"name\": \"Crystalys\",\n    \"requirements\": [\"Broadsword\", \"Blades of Attack\", \" Recipe\"]\n  }, {\n    \"name\": \"Daedalus\",\n    \"requirements\": [\"Crystalys\", \"Demon Edge\", \"Recipe\"]\n  }, {\n    \"name\": \"Dagon\",\n    \"requirements\": [\"Staff of Wizardry\", \"Null Talisman\", \"Recipe\"]\n  }, {\n    \"name\": \"Demon Edge\"\n  }, {\n    \"name\": \"Desolator\",\n    \"requirements\": [\"Mithril Hammer\", \"Mithril Hammer\", \"Recipe\"]\n  }, {\n    \"name\": \"Diffusal Blade\",\n    \"requirements\": [\"Blade of Alacrity\", \"Blade of Alacrity\", \"Robe of the Magi\", \"Recipe\"]\n  }, {\n    \"name\": \"Divine Rapier\",\n    \"requirements\": [\"Sacred Relic\", \"Demon Edge\"]\n  }, {\n    \"name\": \"Dragon Lance\",\n    \"requirements\": [\"Ogre Club\", \"Quarterstaff\"]\n  }, {\n    \"name\": \"Drum of Endurance\",\n    \"requirements\": [\"Bracer\", \"Robe of the Magi\", \" Recipe\"]\n  }, {\n    \"name\": \"Eaglesong\"\n  }, {\n    \"name\": \"Energy Booster\"\n  }, {\n    \"name\": \"Ethereal Blade\",\n    \"requirements\": [\"Eaglesong\", \"Ghost Scepter\"]\n  }, {\n    \"name\": \"Eul's Scepter of Divinity\",\n    \"requirements\": [\"Staff of Wizardry\", \"Sage's Mask\", \"Void Stone\", \"Recipe\"]\n  }, {\n    \"name\": \"Eye of Skadi\",\n    \"requirements\": [\"Ultimate Orb\", \"Ultimate Orb\", \"Point Booster\", \"Orb of Venom\"]\n  }, {\n    \"name\": \"Force Staff\",\n    \"requirements\": [\"Staff of Wizardry\", \"Ring of Regen\", \"Recipe\"]\n  }, {\n    \"name\": \"Gauntlets of Strength\"\n  }, {\n    \"name\": \"Ghost Scepter\"\n  }, {\n    \"name\": \"Glimmer Cape\",\n    \"requirements\": [\"Shadow Amulet\", \"Cloak\"]\n  }, {\n    \"name\": \"Gloves of Haste\"\n  }, {\n    \"name\": \"Guardian Greaves\",\n    \"requirements\": [\"Mekansm\", \"Arcane Boots\", \"Recipe\"]\n  }, {\n    \"name\": \"Hand of Midas\",\n    \"requirements\": [\"Gloves of Haste\", \"Recipe\"]\n  }, {\n    \"name\": \"Headdress\",\n    \"requirements\": [\"Ring of Regen\", \"Iron Branch\", \"Recipe\"]\n  }, {\n    \"name\": \"Heart of Tarrasque\",\n    \"requirements\": [\"Reaver\", \"Vitality Booster\", \"Recipe\"]\n  }, {\n    \"name\": \"Heaven's Halberd\",\n    \"requirements\": [\"Sange\", \"Talisman of Evasion\"]\n  }, {\n    \"name\": \"Helm of Iron Will\"\n  }, {\n    \"name\": \"Helm of The Dominator\",\n    \"requirements\": [\"Helm of Iron Will\", \"Morbid Mask\"]\n  }, {\n    \"name\": \"Hood of Defiance\",\n    \"requirements\": [\"Ring of Health\", \"Cloak\", \"Ring of Regen\", \"Ring of Regen\"]\n  }, {\n    \"name\": \"Hyperstone\"\n  }, {\n    \"name\": \"Iron Branch\"\n  }, {\n    \"name\": \"Iron Talon\",\n    \"requirements\": [\"Quelling Blade\", \"Ring of Protection\", \"Recipe\"]\n  }, {\n    \"name\": \"Javelin\"\n  }, {\n    \"name\": \"Linken's Sphere\",\n    \"requirements\": [\"Perseverance\", \"Ultimate Orb\", \"Recipe\"]\n  }, {\n    \"name\": \"Lotus Orb\",\n    \"requirements\": [\"Perseverance\", \"Platemail\", \"Recipe\"]\n  }, {\n    \"name\": \"Maelstrom\",\n    \"requirements\": [\"Mithril Hammer\", \"Gloves of Haste\", \"Recipe\"]\n  }, {\n    \"name\": \"Magic Stick\"\n  }, {\n    \"name\": \"Magic Wand\",\n    \"requirements\": [\"Magic Stick\", \"Iron Branch\", \"Iron Branch\", \"Circlet\"]\n  }, {\n    \"name\": \"Manta Style\",\n    \"requirements\": [\"Ultimate Orb\", \"Yasha\", \"Recipe\"]\n  }, {\n    \"name\": \"Mantle of Intelligence\"\n  }, {\n    \"name\": \"Mask of Madness\",\n    \"requirements\": [\"Morbid Mask\", \"Recipe\"]\n  }, {\n    \"name\": \"Medallion of Courage\",\n    \"requirements\": [\"Chainmail\", \"Sage's Mask\", \"Recipe\"]\n  }, {\n    \"name\": \"Mekansm\",\n    \"requirements\": [\"Buckler\", \"Headdress\", \"Recipe\"]\n  }, {\n    \"name\": \"Mithril Hammer\"\n  }, {\n    \"name\": \"Mjollnir\",\n    \"requirements\": [\"Hyperstone\", \"Maelstrom\", \"Recipe\"]\n  }, {\n    \"name\": \"Monkey King Bar\",\n    \"requirements\": [\"Javelin\", \"Javelin\", \"Demon Edge\"]\n  }, {\n    \"name\": \"Moon Shard\",\n    \"requirements\": [\"Hyperstone\", \"Hyperstone\"]\n  }, {\n    \"name\": \"Morbid Mask\"\n  }, {\n    \"name\": \"Mystic Staff\"\n  }, {\n    \"name\": \"Necronomicon\",\n    \"requirements\": [\"Staff of Wizardry\", \"Belt of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Null Talisman\",\n    \"requirements\": [\"Circlet\", \"Mantle of Intelligence\", \"Recipe\"]\n  }, {\n    \"name\": \"Oblivion Staff\",\n    \"requirements\": [\"Quarterstaff\", \"Robe of the Magi\", \"Sage's Mask\"]\n  }, {\n    \"name\": \"Octarine Core\",\n    \"requirements\": [\"Mystic Staff\", \"Soul Booster\"]\n  }, {\n    \"name\": \"Ogre Club\"\n  }, {\n    \"name\": \"Orb of Venom\"\n  }, {\n    \"name\": \"Orchid Malevolence\",\n    \"requirements\": [\"Oblivion Staff\", \"Oblivion Staff\", \"Recipe\"]\n  }, {\n    \"name\": \"Perseverance\",\n    \"requirements\": [\"Ring of Health\", \"Void Stone\"]\n  }, {\n    \"name\": \"Phase Boots\",\n    \"requirements\": [\"Boots of Speed\", \"Blades of Attack\", \"Blades of Attack\"]\n  }, {\n    \"name\": \"Pipe of Insight\",\n    \"requirements\": [\"Hood of Defiance\", \"Headdress\", \"Recipe\"]\n  }, {\n    \"name\": \"Platemail\"\n  }, {\n    \"name\": \"Point Booster\"\n  }, {\n    \"name\": \"Poor Man's Shield\",\n    \"requirements\": [\"Stout Shield\", \"Slippers of Agility\", \"Slippers of Agility\"]\n  }, {\n    \"name\": \"Power Treads Agi\",\n    \"requirements\": [\"Boots of Speed\", \"Gloves of Haste\", \"Band of Elvenskin\"]\n  }, {\n    \"name\": \"Power Treads Str\",\n    \"requirements\": [\"Boots of Speed\", \"Gloves of Haste\", \"Belt of Strength\"]\n  }, {\n    \"name\": \"Power Treads Int\",\n    \"requirements\": [\"Boots of Speed\", \"Gloves of Haste\", \"Robe of the Magi\"]\n  }, {\n    \"name\": \"Quarterstaff\"\n  }, {\n    \"name\": \"Quelling Blade\"\n  }, {\n    \"name\": \"Radiance\",\n    \"requirements\": [\"Sacred Relic\", \"Recipe\"]\n  }, {\n    \"name\": \"Reaver\"\n  }, {\n    \"name\": \"Recipe\"\n  }, {\n    \"name\": \"Refresher Orb\",\n    \"requirements\": [\"Perseverance\", \"Perseverance\", \"Recipe\"]\n  }, {\n    \"name\": \"Ring of Aquila\",\n    \"requirements\": [\"Wraith Band\", \"Ring of Basilius\"]\n  }, {\n    \"name\": \"Ring of Basilius\",\n    \"requirements\": [\"Sage's Mask\", \"Ring of Protection\"]\n  }, {\n    \"name\": \"Ring of Health\"\n  }, {\n    \"name\": \"Ring of Protection\"\n  }, {\n    \"name\": \"Ring of Regen\"\n  }, {\n    \"name\": \"Robe of The Magi\"\n  }, {\n    \"name\": \"Rod of Atos\",\n    \"requirements\": [\"Staff of Wizardry\", \"Staff of Wizardry\", \"Vitality Booster\"]\n  }, {\n    \"name\": \"Sacred Relic\"\n  }, {\n    \"name\": \"Sage's Mask\"\n  }, {\n    \"name\": \"Sange\",\n    \"requirements\": [\"Ogre Club\", \"Belt of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Sange And Yasha\",\n    \"requirements\": [\"Sange\", \"Yasha\"]\n  }, {\n    \"name\": \"Satanic\",\n    \"requirements\": [\"Reaver\", \"Helm of the Dominator\", \"Recipe\"]\n  }, {\n    \"name\": \"Scythe of Vyse\",\n    \"requirements\": [\"Mystic Staff\", \"Ultimate Orb\", \"Void Stone\"]\n  }, {\n    \"name\": \"Shadow Amulet\"\n  }, {\n    \"name\": \"Shadow Blade\",\n    \"requirements\": [\"Claymore\", \"Shadow Amulet\"]\n  }, {\n    \"name\": \"Shiva's Guard\",\n    \"requirements\": [\"Mystic Staff\", \"Platemail\", \"Recipe\"]\n  }, {\n    \"name\": \"Silver Edge\",\n    \"requirements\": [\"Shadow Blade\", \"Sange\", \"Recipe\"]\n  }, {\n    \"name\": \"Skull Basher\",\n    \"requirements\": [\"Javelin\", \"Belt of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Slippers of Agility\"\n  }, {\n    \"name\": \"Solar Crest\",\n    \"requirements\": [\"Medallion of Courage\", \"Talisman of Evasion\"]\n  }, {\n    \"name\": \"Soul Booster\",\n    \"requirements\": [\"Point Booster\", \"Vitality Booster\", \"Energy Booster\"]\n  }, {\n    \"name\": \"Soul Ring\",\n    \"requirements\": [\"Ring of Regen\", \"Sage's Mask\", \"Recipe\"]\n  }, {\n    \"name\": \"Staff of Wizardry\"\n  }, {\n    \"name\": \"Stout Shield\"\n  }, {\n    \"name\": \"Talisman of Evasion\"\n  }, {\n    \"name\": \"Tranquil Boots\",\n    \"requirements\": [\"Boots of Speed\", \"Ring of Protection\", \"Ring of Regen\"]\n  }, {\n    \"name\": \"Ultimate Orb\"\n  }, {\n    \"name\": \"Urn of Shadows\",\n    \"requirements\": [\"Sage's Mask\", \"Gauntlets of Strength\", \"Gauntlets of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Vanguard\",\n    \"requirements\": [\"Ring of Health\", \"Vitality Booster\", \"Stout Shield\"]\n  }, {\n    \"name\": \"Veil of Discord\",\n    \"requirements\": [\"Helm of Iron Will\", \"Null Talisman\", \"Robe of the Magi\", \"Robe of the Magi\"]\n  }, {\n    \"name\": \"Vitality Booster\"\n  }, {\n    \"name\": \"Vladmir's Offering\",\n    \"requirements\": [\"Morbid Mask\", \"Ring of Basilius\", \"Headdress\", \"Recipe\"]\n  }, {\n    \"name\": \"Void Stone\"\n  }, {\n    \"name\": \"Wraith Band\",\n    \"requirements\": [\"Circlet\", \"Slippers of Agility\", \"Recipe\"]\n  }, {\n    \"name\": \"Yasha\",\n    \"requirements\": [\"Blade of Alacrity\", \"Band of Elvenskin\", \"Recipe\"]\n  }];\n\n  var DataService = function () {\n    DataService.$inject = [\"_\", \"API\"];\n    function DataService(_, API) {\n      _classCallCheck(this, DataService);\n\n      this._ = _;\n      this.API = API;\n      this.items = items;\n      this.itemsWithRequirements = this.items.filter(function (i) {\n        return i.requirements && i.requirements.length > 0;\n      });\n\n      this.USER_API = false;\n    }\n\n    _createClass(DataService, [{\n      key: \"getRandomQuiz\",\n      value: function getRandomQuiz() {\n        var _this = this;\n\n        if (this.USER_API) {\n          console.log('getting random quiz from api...');\n          return this.API.Quiz.query().$promise.then(function (data) {\n            return data[0];\n          });\n        } else {\n          console.log('getting random quiz from local...');\n          return new Promise(function (resolve) {\n            var item = _.cloneDeep(_this._.sample(_this.itemsWithRequirements));\n\n            var wrong = _.cloneDeep(_this._.sampleSize(_this._.reject(_this.items, function (i) {\n              return i.name === item.name;\n            }), 9 - item.requirements.length));\n\n            var quiz = {\n              target: item,\n              wrong: wrong\n            };\n\n            quiz.target.requirements.forEach(function (e, i) {\n              quiz.target.requirements[i] = _this.getItem(e);\n            });\n\n            resolve(quiz);\n          });\n        }\n      }\n    }, {\n      key: \"getItem\",\n      value: function getItem(name) {\n        var item = _.cloneDeep(this._.find(this.items, function (i) {\n          return i.name.toLowerCase() === name.toLowerCase();\n        }));\n\n        if (!item) {\n          throw new Error(\"Item not found: \" + name);\n        }\n\n        return item;\n      }\n    }]);\n\n    return DataService;\n  }();\n\n  angular.module('dotaQuiz').service('DataService', DataService);\n})();\n'use strict';\n\n(function () {\n\n  /**\n   * Lodash wrapper module.\n   *\n   * @ngdoc module\n   * @name Lodash\n   */\n  Lodash.$inject = [\"$window\"];\n  angular.module('Lodash', []).factory('_', Lodash);\n\n  /**\n    * Expose Lo-Dash through injectable factory, so we don't pollute / rely on global namespace\n    * just inject lodash as Lodash.\n    *\n    * @ngdoc factory\n    * @name _\n    * @memberof Lodash\n    */\n  function Lodash($window) {\n    return $window._;\n  }\n})();\n'use strict';\n\n(function () {\n\n  QuizController.$inject = [\"QuizFactory\"];\n  angular.module('dotaQuiz').component('quiz', {\n    controller: QuizController,\n    templateUrl: 'quiz/quiz.html'\n  });\n\n  function QuizController(QuizFactory) {\n    var vm = this;\n\n    vm.data = QuizFactory.data;\n    vm.select = QuizFactory.select;\n    vm.unselect = QuizFactory.unselect;\n\n    activate();\n\n    ///////////////\n\n    function activate() {\n      QuizFactory.start();\n    }\n  }\n})();\n'use strict';\n\n(function () {\n\n  QuizFactory.$inject = [\"$log\", \"$rootScope\", \"_\", \"DataService\", \"StatsFactory\", \"StorageService\"];\n  angular.module('dotaQuiz').factory('QuizFactory', QuizFactory);\n\n  function QuizFactory($log, $rootScope, _, DataService, StatsFactory, StorageService) {\n    var _unknownObject = {\n      icon: 'assets/images/icon/unknown.png',\n      alt: 'Unknown Icon',\n      unknown: true\n    };\n\n    var factory = {\n      select: select,\n      unselect: unselect,\n      start: start,\n      data: {}\n    };\n\n    return factory;\n\n    ///////////////////\n\n    function start() {\n      StatsFactory.start();\n\n      if (angular.isDefined(StorageService.getData())) {\n        $log.info('using data from $localStorage...');\n        // skip fetch if there already a quiz in loca storage\n        _.assign(factory.data, StorageService.getData());\n      } else {\n        _fetchQuiz();\n      }\n    }\n\n    function _reset() {\n      StatsFactory.reset();\n      _fetchQuiz();\n    }\n\n    function select(item) {\n      if (!item.selected) {\n        for (var i in factory.data.answers) {\n          if (factory.data.answers[i].unknown === true) {\n            item.selected = true;\n            factory.data.answers[i] = item;\n            break;\n          }\n        }\n\n        if (_answerComplete()) {\n          _validateAnswer();\n        }\n      }\n    }\n\n    function unselect(index) {\n      var item = factory.data.answers[index];\n\n      if (!item.unknown) {\n        item.selected = false;\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = factory.data.choices[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n\n            if (i.index === item.index) {\n              i.selected = false;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        factory.data.answers[index] = _.cloneDeep(_unknownObject);\n      }\n    }\n\n    function _fetchQuiz() {\n      $log.info('fetching a new quiz...');\n\n      DataService.getRandomQuiz().then(function (quiz) {\n        _populateData(quiz);\n        if (!DataService.USER_API) {\n          $rootScope.$digest();\n        }\n      });\n    }\n\n    function _populateData(quiz) {\n      quiz.target.icon = _getIconName(quiz.target.name);\n\n      var answers = quiz.target.requirements.map(function (req) {\n        return _.cloneDeep(_unknownObject);\n      });\n      var choices = _.shuffle(_.concat(quiz.target.requirements, quiz.wrong));\n      choices.forEach(function (c, i) {\n        c.icon = _getIconName(c.name);\n        c.index = i;\n      });\n\n      factory.data.target = quiz.target;\n      factory.data.answers = answers;\n      factory.data.choices = choices;\n\n      StorageService.setData(factory.data);\n    }\n\n    function _getIconName(name) {\n      var iconName = name.toLowerCase().replace(/ /g, '_');\n      return 'assets/images/icon/' + iconName + '.png';\n    }\n\n    function _answerComplete() {\n      var complete = true;\n\n      factory.data.answers.forEach(function (answer) {\n        if (answer.unknown === true) {\n          complete = false;\n        }\n      });\n\n      return complete;\n    }\n\n    function _validateAnswer() {\n      var answer = _.sortBy(factory.data.answers.map(function (answer) {\n        return answer.name;\n      }), function (e) {\n        return e;\n      });\n      var requirements = _.sortBy(factory.data.target.requirements.map(function (requirement) {\n        return requirement.name;\n      }), function (e) {\n        return e;\n      });\n\n      var answerCorrect = _.isEqual(answer, requirements);\n\n      if (answerCorrect) {\n        _handleCorrectAnswer();\n      } else {\n        _handleIncorrectAnswer();\n      }\n    }\n\n    function _handleCorrectAnswer() {\n      $log.info('correct answer!');\n      StatsFactory.correct();\n      _fetchQuiz();\n    }\n\n    function _handleIncorrectAnswer() {\n      $log.info('wrong answer. :(');\n\n      var guessesLeft = StatsFactory.incorrect();\n\n      if (guessesLeft <= 0) {\n        alert('Final Score: ' + StatsFactory.getScore());\n        _reset();\n      }\n    }\n  }\n})();\n'use strict';\n\n(function () {\n\n  StatsController.$inject = [\"StatsFactory\"];\n  angular.module('dotaQuiz').component('stats', {\n    controller: StatsController,\n    templateUrl: 'stats/stats.html'\n  });\n\n  function StatsController(StatsFactory) {\n    var vm = this;\n\n    vm.data = StatsFactory.data;\n  }\n})();\n'use strict';\n\n(function () {\n\n  StatsFactory.$inject = [\"$log\", \"StorageService\"];\n  angular.module('dotaQuiz').factory('StatsFactory', StatsFactory);\n\n  function StatsFactory($log, StorageService) {\n    var _DefaultStats = {\n      inRow: 0,\n      score: 0,\n      guesses: 3\n    };\n\n    var factory = {\n      start: start,\n      reset: reset,\n      correct: correct,\n      incorrect: incorrect,\n      getScore: getScore,\n      data: {}\n    };\n\n    return factory;\n\n    ///////////////////\n\n    function start() {\n      if (angular.isUndefined(StorageService.getStats())) {\n        StorageService.setStats(_DefaultStats);\n      } else {\n        $log.info('using stats from $localStorage...');\n      }\n\n      factory.data = StorageService.getStats();\n    }\n\n    function reset() {\n      _.assign(factory.data, _DefaultStats);\n    }\n\n    function incorrect() {\n      factory.data.guesses -= 1;\n      factory.data.inRow = 0;\n\n      return factory.data.guesses;\n    }\n\n    function correct() {\n      var base = 200;\n      var bonus = 30;\n\n      factory.data.score += base + bonus * factory.data.inRow;\n      factory.data.inRow += 1;\n    }\n\n    function getScore() {\n      return factory.data.score;\n    }\n  }\n})();\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function () {\n  var StorageService = function () {\n    StorageService.$inject = [\"$localStorage\"];\n    function StorageService($localStorage) {\n      _classCallCheck(this, StorageService);\n\n      this.$localStorage = $localStorage;\n    }\n\n    _createClass(StorageService, [{\n      key: 'getStats',\n      value: function getStats() {\n        return this.$localStorage.stats;\n      }\n    }, {\n      key: 'setStats',\n      value: function setStats(stats) {\n        this.$localStorage.stats = stats;\n      }\n    }, {\n      key: 'deleteStats',\n      value: function deleteStats() {\n        delete this.$localStorage.stats;\n      }\n    }, {\n      key: 'getData',\n      value: function getData() {\n        return this.$localStorage.data;\n      }\n    }, {\n      key: 'setData',\n      value: function setData(data) {\n        this.$localStorage.data = data;\n      }\n    }, {\n      key: 'deleteData',\n      value: function deleteData() {\n        delete this.$localStorage.data;\n      }\n    }]);\n\n    return StorageService;\n  }();\n\n  angular.module('dotaQuiz').service('StorageService', StorageService);\n})();","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .factory('API', API);\n\n  function API($resource) {\n    const DOMAIN = `/api`;\n\n    const vm = {\n      Quiz: getQuizResource(),\n    }\n\n    return vm;\n\n    ///////////////////\n\n    function getQuizResource() {\n      return $resource(DOMAIN + `/quiz/random`);\n    }\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .controller('AppController', AppController);\n\n  function AppController() {\n  }\n\n})();\n","(function() {\n\n  /**\n   * Lodash wrapper module.\n   *\n   * @ngdoc module\n   * @name Lodash\n   */\n  angular\n    .module('Lodash', [])\n    .factory('_', Lodash);\n\n  /**\n    * Expose Lo-Dash through injectable factory, so we don't pollute / rely on global namespace\n    * just inject lodash as Lodash.\n    *\n    * @ngdoc factory\n    * @name _\n    * @memberof Lodash\n    */\n  function Lodash($window) {\n      return $window._;\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .component('quiz', {\n      controller: QuizController,\n      templateUrl: 'quiz/quiz.html'\n    });\n\n  function QuizController(QuizFactory) {\n    const vm = this;\n\n    vm.data = QuizFactory.data;\n    vm.select = QuizFactory.select;\n    vm.unselect = QuizFactory.unselect;\n\n    activate();\n\n    ///////////////\n\n    function activate() {\n      QuizFactory.start();\n    }\n\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .factory('QuizFactory', QuizFactory);\n\n  function QuizFactory($log, $rootScope, _, DataService, StatsFactory, StorageService) {\n    const _unknownObject = {\n      icon: 'assets/images/icon/unknown.png',\n      alt: 'Unknown Icon',\n      unknown: true\n    };\n\n    const factory = {\n      select: select,\n      unselect: unselect,\n      start: start,\n      data: {}\n    }\n\n    return factory;\n\n    ///////////////////\n\n    function start() {\n      StatsFactory.start();\n\n      if (angular.isDefined(StorageService.getData())) {\n        $log.info('using data from $localStorage...');\n        // skip fetch if there already a quiz in loca storage\n        _.assign(factory.data, StorageService.getData());\n      } else {\n        _fetchQuiz();\n      }\n    }\n\n    function _reset() {\n      StatsFactory.reset();\n      _fetchQuiz();\n    }\n\n    function select(item) {\n      if (!item.selected) {\n        for (let i in factory.data.answers) {\n          if (factory.data.answers[i].unknown === true) {\n            item.selected = true;\n            factory.data.answers[i] = item;\n            break;\n          }\n        }\n\n        if (_answerComplete()) {\n          _validateAnswer();\n        }\n      }\n    }\n\n    function unselect(index) {\n      let item = factory.data.answers[index];\n\n      if (!item.unknown) {\n        item.selected = false;\n\n        for (let i of factory.data.choices) {\n          if (i.index === item.index) {\n            i.selected = false;\n          }\n        }\n\n        factory.data.answers[index] = _.cloneDeep(_unknownObject);\n      }\n    }\n\n    function _fetchQuiz() {\n      $log.info('fetching a new quiz...');\n\n      DataService.getRandomQuiz().then(quiz => {\n        _populateData(quiz);\n        if (!DataService.USER_API) {\n          $rootScope.$digest();\n        }\n      });\n    }\n\n    function _populateData(quiz) {\n      quiz.target.icon = _getIconName(quiz.target.name);\n\n      const answers = quiz.target.requirements.map(req => _.cloneDeep(_unknownObject));\n      const choices = _.shuffle(_.concat(quiz.target.requirements, quiz.wrong));\n      choices.forEach((c, i) => {\n        c.icon = _getIconName(c.name)\n        c.index = i;\n      });\n\n      factory.data.target = quiz.target;\n      factory.data.answers = answers;\n      factory.data.choices = choices;\n\n      StorageService.setData(factory.data);\n    }\n\n    function _getIconName(name) {\n      const iconName = name.toLowerCase().replace(/ /g, '_');\n      return `assets/images/icon/${iconName}.png`;\n    }\n\n    function _answerComplete() {\n      let complete = true;\n\n      factory.data.answers.forEach(answer => {\n        if (answer.unknown === true) {\n          complete = false;\n        }\n      });\n\n      return complete;\n    }\n\n    function _validateAnswer() {\n      const answer = _.sortBy(factory.data.answers.map(answer => answer.name), e => e);\n      const requirements = _.sortBy(factory.data.target.requirements.map(requirement => requirement.name), e => e);\n\n      const answerCorrect = _.isEqual(answer, requirements);\n\n      if (answerCorrect) {\n        _handleCorrectAnswer();\n      } else {\n        _handleIncorrectAnswer();\n      }\n    }\n\n    function _handleCorrectAnswer() {\n      $log.info('correct answer!');\n      StatsFactory.correct();\n      _fetchQuiz();\n    }\n\n    function _handleIncorrectAnswer() {\n      $log.info('wrong answer. :(');\n\n      const guessesLeft = StatsFactory.incorrect();\n\n      if (guessesLeft <= 0) {\n        alert(`Final Score: ${StatsFactory.getScore()}`);\n        _reset();\n      }\n    }\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .component('stats', {\n      controller: StatsController,\n      templateUrl: 'stats/stats.html'\n    });\n\n  function StatsController(StatsFactory) {\n    const vm = this;\n\n    vm.data = StatsFactory.data;\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .factory('StatsFactory', StatsFactory);\n\n  function StatsFactory($log, StorageService) {\n    const _DefaultStats = {\n      inRow: 0,\n      score: 0,\n      guesses: 3\n    }\n\n    const factory = {\n      start: start,\n      reset: reset,\n      correct: correct,\n      incorrect: incorrect,\n      getScore: getScore,\n      data: {}\n    }\n\n    return factory;\n\n    ///////////////////\n\n    function start() {\n      if (angular.isUndefined(StorageService.getStats())) {\n        StorageService.setStats(_DefaultStats);\n      } else {\n        $log.info('using stats from $localStorage...');\n      }\n\n      factory.data = StorageService.getStats();\n    }\n\n    function reset() {\n      _.assign(factory.data, _DefaultStats);\n    }\n\n    function incorrect() {\n      factory.data.guesses -= 1;\n      factory.data.inRow = 0;\n\n      return factory.data.guesses;\n    }\n\n    function correct() {\n      const base = 200;\n      const bonus = 30;\n\n      factory.data.score += base + (bonus * factory.data.inRow);\n      factory.data.inRow += 1;\n    }\n\n    function getScore() {\n      return factory.data.score;\n    }\n  }\n\n})();\n"],"sourceRoot":"/source/"}