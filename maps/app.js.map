{"version":3,"sources":["app.module.js","components/data/data.service.js","components/storage/storage.factory.js","app.config.js","app.js","components/app/app.controller.js","components/lodash/lodash.factory.js","components/log/log.service.js","components/stats/stats.component.js","components/stats/stats.factory.js","components/quiz/quiz.component.js","components/quiz/quiz.factory.js"],"names":["_classCallCheck","instance","Constructor","TypeError","angular","module","dotaQuizConfig","$stateProvider","$urlRouterProvider","appState","url","controller","templateUrl","state","otherwise","$inject","config","AppController","Log","updateReport","template","logs","getLogs","join","report","encodeURIComponent","replace","vm","urlReport","this","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","items","name","requirements","DataService","_","StorageService","itemsWithRequirements","getQuizLeft","setQuizLeft","shuffle","filter","value","_this","log","Promise","resolve","item","cloneDeep","pop","wrong","sampleSize","reject","quiz","forEach","e","getItem","info","find","toLowerCase","error","Error","service","Lodash","$window","factory","LogService","$log","_len","arguments","message","Array","_key","add","apply","undefined","concat","_len2","_key2","_len3","_key3","warn","_len4","_key4","_len5","_key5","push","map","toJson","shift","StatsController","StatsFactory","data","component","start","isUndefined","getStats","setStats","_DefaultStats","reset","assign","incorrect","guesses","inRow","correct","base","bonus","score","getScore","QuizController","QuizFactory","activate","select","unselect","$rootScope","isDefined","getData","_fetchQuiz","_reset","selected","answers","unknown","_answerComplete","_validateAnswer","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","choices","Symbol","iterator","next","done","err","_unknownObject","getRandomQuiz","then","_populateData","$digest","icon","_getIconName","req","c","setData","iconName","complete","answer","sortBy","requirement","answerCorrect","isEqual","_handleCorrectAnswer","_handleIncorrectAnswer","alert","guessesLeft","alt","$localStorage","stats","quizLeft"],"mappings":"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","file":"app.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('dotaQuiz', [\n    'ui.router',\n    'ngResource',\n    'ngStorage',\n    'Lodash'\n  ]);\n\n})();\n","(function() {\n\n  const items = [\n    {\n      \"name\": \"Abyssal Blade\",\n      \"requirements\": [\n        \"Sacred Relic\",\n        \"Skull Basher\"\n      ]\n    },\n    {\n      \"name\": \"Aether Lens\",\n      \"requirements\": [\n        \"Recipe\",\n        \"Energy Booster\",\n        \"Ring of Health\"\n      ]\n    },\n    {\n      \"name\": \"Aghanim's Scepter\",\n      \"requirements\": [\n        \"Point Booster\",\n        \"Ogre Club\",\n        \"Blade of Alacrity\",\n        \"Staff of Wizardry\"\n      ]\n    },\n    {\n      \"name\": \"Arcane Boots\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Energy Booster\"\n      ]\n    },\n    {\n      \"name\": \"Armlet of Mordiggian\",\n      \"requirements\": [\n        \"Helm of Iron Will\",\n        \"Gloves of Haste\",\n        \"Blades of Attack\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Assault Cuirass\",\n      \"requirements\": [\n        \"Platemail\",\n        \"Hyperstone\",\n        \"Chainmail\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Band of Elvenskin\"\n    },\n    {\n      \"name\": \"Battle Fury\",\n      \"requirements\": [\n        \"Claymore\",\n        \"Broadsword\",\n        \"Perseverance\",\n        \"Quelling Blade\"\n      ]\n    },\n    {\n      \"name\": \"Belt of Strength\"\n    },\n    {\n      \"name\": \"Black King Bar\",\n      \"requirements\": [\n        \"Mithril Hammer\",\n        \"Ogre Club\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Blade Mail\",\n      \"requirements\": [\n        \"Broadsword\",\n        \"Chainmail\",\n        \"Robe of the Magi\"\n      ]\n    },\n    {\n      \"name\": \"Blade of Alacrity\"\n    },\n    {\n      \"name\": \"Blades of Attack\"\n    },\n    {\n      \"name\": \"Blink Dagger\"\n    },\n    {\n      \"name\": \"Bloodstone\",\n      \"requirements\": [\n        \"Soul Booster\",\n        \"Soul Ring\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Boots of Speed\"\n    },\n    {\n      \"name\": \"Boots of Travel\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Bracer\",\n      \"requirements\": [\n        \"Circlet\",\n        \"Gauntlets of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Broadsword\"\n    },\n    {\n      \"name\": \"Buckler\",\n      \"requirements\": [\n        \"Chainmail\",\n        \"Iron Branch\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Butterfly\",\n      \"requirements\": [\n        \"Eaglesong\",\n        \"Talisman of Evasion\",\n        \"Quarterstaff\"\n      ]\n    },\n    {\n      \"name\": \"Chainmail\"\n    },\n    {\n      \"name\": \"Circlet\"\n    },\n    {\n      \"name\": \"Claymore\"\n    },\n    {\n      \"name\": \"Cloak\"\n    },\n    {\n      \"name\": \"Crimson Guard\",\n      \"requirements\": [\n        \"Vanguard\",\n        \"Buckler\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Crystalys\",\n      \"requirements\": [\n        \"Broadsword\",\n        \"Blades of Attack\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Daedalus\",\n      \"requirements\": [\n        \"Crystalys\",\n        \"Demon Edge\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Dagon 1\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Null Talisman\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Dagon 2\",\n      \"requirements\": [\n        \"Dagon 1\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Dagon 3\",\n      \"requirements\": [\n        \"Dagon 2\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Dagon 4\",\n      \"requirements\": [\n        \"Dagon 3\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Dagon 5\",\n      \"requirements\": [\n        \"Dagon 4\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Demon Edge\"\n    },\n    {\n      \"name\": \"Desolator\",\n      \"requirements\": [\n        \"Mithril Hammer\",\n        \"Mithril Hammer\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Diffusal Blade 1\",\n      \"requirements\": [\n        \"Blade of Alacrity\",\n        \"Blade of Alacrity\",\n        \"Robe of the Magi\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Diffusal Blade 2\",\n      \"requirements\": [\n        \"Diffusal Blade 1\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Divine Rapier\",\n      \"requirements\": [\n        \"Sacred Relic\",\n        \"Demon Edge\"\n      ]\n    },\n    {\n      \"name\": \"Dragon Lance\",\n      \"requirements\": [\n        \"Ogre Club\",\n        \"Quarterstaff\"\n      ]\n    },\n    {\n      \"name\": \"Drum of Endurance\",\n      \"requirements\": [\n        \"Bracer\",\n        \"Robe of the Magi\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Eaglesong\"\n    },\n    {\n      \"name\": \"Energy Booster\"\n    },\n    {\n      \"name\": \"Ethereal Blade\",\n      \"requirements\": [\n        \"Eaglesong\",\n        \"Ghost Scepter\"\n      ]\n    },\n    {\n      \"name\": \"Eul's Scepter of Divinity\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Sage's Mask\",\n        \"Void Stone\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Eye of Skadi\",\n      \"requirements\": [\n        \"Ultimate Orb\",\n        \"Ultimate Orb\",\n        \"Point Booster\",\n        \"Orb of Venom\"\n      ]\n    },\n    {\n      \"name\": \"Force Staff\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Ring of Regen\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Gauntlets of Strength\"\n    },\n    {\n      \"name\": \"Ghost Scepter\"\n    },\n    {\n      \"name\": \"Glimmer Cape\",\n      \"requirements\": [\n        \"Shadow Amulet\",\n        \"Cloak\"\n      ]\n    },\n    {\n      \"name\": \"Gloves of Haste\"\n    },\n    {\n      \"name\": \"Guardian Greaves\",\n      \"requirements\": [\n        \"Mekansm\",\n        \"Arcane Boots\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Hand of Midas\",\n      \"requirements\": [\n        \"Gloves of Haste\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Headdress\",\n      \"requirements\": [\n        \"Ring of Regen\",\n        \"Iron Branch\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Heart of Tarrasque\",\n      \"requirements\": [\n        \"Reaver\",\n        \"Vitality Booster\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Heaven's Halberd\",\n      \"requirements\": [\n        \"Sange\",\n        \"Talisman of Evasion\"\n      ]\n    },\n    {\n      \"name\": \"Helm of Iron Will\"\n    },\n    {\n      \"name\": \"Helm of The Dominator\",\n      \"requirements\": [\n        \"Helm of Iron Will\",\n        \"Morbid Mask\"\n      ]\n    },\n    {\n      \"name\": \"Hood of Defiance\",\n      \"requirements\": [\n        \"Ring of Health\",\n        \"Cloak\",\n        \"Ring of Regen\",\n        \"Ring of Regen\"\n      ]\n    },\n    {\n      \"name\": \"Hyperstone\"\n    },\n    {\n      \"name\": \"Iron Branch\"\n    },\n    {\n      \"name\": \"Iron Talon\",\n      \"requirements\": [\n        \"Quelling Blade\",\n        \"Ring of Protection\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Javelin\"\n    },\n    {\n      \"name\": \"Linken's Sphere\",\n      \"requirements\": [\n        \"Perseverance\",\n        \"Ultimate Orb\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Lotus Orb\",\n      \"requirements\": [\n        \"Perseverance\",\n        \"Platemail\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Maelstrom\",\n      \"requirements\": [\n        \"Mithril Hammer\",\n        \"Gloves of Haste\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Magic Stick\"\n    },\n    {\n      \"name\": \"Magic Wand\",\n      \"requirements\": [\n        \"Magic Stick\",\n        \"Iron Branch\",\n        \"Iron Branch\",\n        \"Circlet\"\n      ]\n    },\n    {\n      \"name\": \"Manta Style\",\n      \"requirements\": [\n        \"Ultimate Orb\",\n        \"Yasha\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Mantle of Intelligence\"\n    },\n    {\n      \"name\": \"Mask of Madness\",\n      \"requirements\": [\n        \"Morbid Mask\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Medallion of Courage\",\n      \"requirements\": [\n        \"Chainmail\",\n        \"Sage's Mask\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Mekansm\",\n      \"requirements\": [\n        \"Buckler\",\n        \"Headdress\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Mithril Hammer\"\n    },\n    {\n      \"name\": \"Mjollnir\",\n      \"requirements\": [\n        \"Hyperstone\",\n        \"Maelstrom\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Monkey King Bar\",\n      \"requirements\": [\n        \"Javelin\",\n        \"Javelin\",\n        \"Demon Edge\"\n      ]\n    },\n    {\n      \"name\": \"Moon Shard\",\n      \"requirements\": [\n        \"Hyperstone\",\n        \"Hyperstone\"\n      ]\n    },\n    {\n      \"name\": \"Morbid Mask\"\n    },\n    {\n      \"name\": \"Mystic Staff\"\n    },\n    {\n      \"name\": \"Necronomicon 1\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Belt of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Necronomicon 2\",\n      \"requirements\": [\n        \"Necronomicon 1\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Necronomicon 3\",\n      \"requirements\": [\n        \"Necronomicon 2\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Null Talisman\",\n      \"requirements\": [\n        \"Circlet\",\n        \"Mantle of Intelligence\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Oblivion Staff\",\n      \"requirements\": [\n        \"Quarterstaff\",\n        \"Robe of the Magi\",\n        \"Sage's Mask\"\n      ]\n    },\n    {\n      \"name\": \"Octarine Core\",\n      \"requirements\": [\n        \"Mystic Staff\",\n        \"Soul Booster\"\n      ]\n    },\n    {\n      \"name\": \"Ogre Club\"\n    },\n    {\n      \"name\": \"Orb of Venom\"\n    },\n    {\n      \"name\": \"Orchid Malevolence\",\n      \"requirements\": [\n        \"Oblivion Staff\",\n        \"Oblivion Staff\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Perseverance\",\n      \"requirements\": [\n        \"Ring of Health\",\n        \"Void Stone\"\n      ]\n    },\n    {\n      \"name\": \"Phase Boots\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Blades of Attack\",\n        \"Blades of Attack\"\n      ]\n    },\n    {\n      \"name\": \"Pipe of Insight\",\n      \"requirements\": [\n        \"Hood of Defiance\",\n        \"Headdress\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Platemail\"\n    },\n    {\n      \"name\": \"Point Booster\"\n    },\n    {\n      \"name\": \"Poor Man's Shield\",\n      \"requirements\": [\n        \"Stout Shield\",\n        \"Slippers of Agility\",\n        \"Slippers of Agility\"\n      ]\n    },\n    {\n      \"name\": \"Power Treads Agi\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Gloves of Haste\",\n        \"Band of Elvenskin\"\n      ]\n    },\n    {\n      \"name\": \"Power Treads Str\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Gloves of Haste\",\n        \"Belt of Strength\"\n      ]\n    },\n    {\n      \"name\": \"Power Treads Int\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Gloves of Haste\",\n        \"Robe of the Magi\"\n      ]\n    },\n    {\n      \"name\": \"Quarterstaff\"\n    },\n    {\n      \"name\": \"Quelling Blade\"\n    },\n    {\n      \"name\": \"Radiance\",\n      \"requirements\": [\n        \"Sacred Relic\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Reaver\"\n    },\n    {\n      \"name\": \"Recipe\"\n    },\n    {\n      \"name\": \"Refresher Orb\",\n      \"requirements\": [\n        \"Perseverance\",\n        \"Perseverance\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Ring of Aquila\",\n      \"requirements\": [\n        \"Wraith Band\",\n        \"Ring of Basilius\"\n      ]\n    },\n    {\n      \"name\": \"Ring of Basilius\",\n      \"requirements\": [\n        \"Sage's Mask\",\n        \"Ring of Protection\"\n      ]\n    },\n    {\n      \"name\": \"Ring of Health\"\n    },\n    {\n      \"name\": \"Ring of Protection\"\n    },\n    {\n      \"name\": \"Ring of Regen\"\n    },\n    {\n      \"name\": \"Robe of The Magi\"\n    },\n    {\n      \"name\": \"Rod of Atos\",\n      \"requirements\": [\n        \"Staff of Wizardry\",\n        \"Staff of Wizardry\",\n        \"Vitality Booster\"\n      ]\n    },\n    {\n      \"name\": \"Sacred Relic\"\n    },\n    {\n      \"name\": \"Sage's Mask\"\n    },\n    {\n      \"name\": \"Sange\",\n      \"requirements\": [\n        \"Ogre Club\",\n        \"Belt of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Sange And Yasha\",\n      \"requirements\": [\n        \"Sange\",\n        \"Yasha\"\n      ]\n    },\n    {\n      \"name\": \"Satanic\",\n      \"requirements\": [\n        \"Reaver\",\n        \"Helm of the Dominator\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Scythe of Vyse\",\n      \"requirements\": [\n        \"Mystic Staff\",\n        \"Ultimate Orb\",\n        \"Void Stone\"\n      ]\n    },\n    {\n      \"name\": \"Shadow Amulet\"\n    },\n    {\n      \"name\": \"Shadow Blade\",\n      \"requirements\": [\n        \"Claymore\",\n        \"Shadow Amulet\"\n      ]\n    },\n    {\n      \"name\": \"Shiva's Guard\",\n      \"requirements\": [\n        \"Mystic Staff\",\n        \"Platemail\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Silver Edge\",\n      \"requirements\": [\n        \"Shadow Blade\",\n        \"Sange\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Skull Basher\",\n      \"requirements\": [\n        \"Javelin\",\n        \"Belt of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Slippers of Agility\"\n    },\n    {\n      \"name\": \"Solar Crest\",\n      \"requirements\": [\n        \"Medallion of Courage\",\n        \"Talisman of Evasion\"\n      ]\n    },\n    {\n      \"name\": \"Soul Booster\",\n      \"requirements\": [\n        \"Point Booster\",\n        \"Vitality Booster\",\n        \"Energy Booster\"\n      ]\n    },\n    {\n      \"name\": \"Soul Ring\",\n      \"requirements\": [\n        \"Ring of Regen\",\n        \"Sage's Mask\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Staff of Wizardry\"\n    },\n    {\n      \"name\": \"Stout Shield\"\n    },\n    {\n      \"name\": \"Talisman of Evasion\"\n    },\n    {\n      \"name\": \"Tranquil Boots\",\n      \"requirements\": [\n        \"Boots of Speed\",\n        \"Ring of Protection\",\n        \"Ring of Regen\"\n      ]\n    },\n    {\n      \"name\": \"Ultimate Orb\"\n    },\n    {\n      \"name\": \"Urn of Shadows\",\n      \"requirements\": [\n        \"Sage's Mask\",\n        \"Gauntlets of Strength\",\n        \"Gauntlets of Strength\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Vanguard\",\n      \"requirements\": [\n        \"Ring of Health\",\n        \"Vitality Booster\",\n        \"Stout Shield\"\n      ]\n    },\n    {\n      \"name\": \"Veil of Discord\",\n      \"requirements\": [\n        \"Helm of Iron Will\",\n        \"Null Talisman\",\n        \"Robe of the Magi\",\n        \"Robe of the Magi\"\n      ]\n    },\n    {\n      \"name\": \"Vitality Booster\"\n    },\n    {\n      \"name\": \"Vladmir's Offering\",\n      \"requirements\": [\n        \"Morbid Mask\",\n        \"Ring of Basilius\",\n        \"Headdress\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Void Stone\"\n    },\n    {\n      \"name\": \"Wraith Band\",\n      \"requirements\": [\n        \"Circlet\",\n        \"Slippers of Agility\",\n        \"Recipe\"\n      ]\n    },\n    {\n      \"name\": \"Yasha\",\n      \"requirements\": [\n        \"Blade of Alacrity\",\n        \"Band of Elvenskin\",\n        \"Recipe\"\n      ]\n    }\n  ];\n\n  class DataService {\n    constructor(_, Log, StorageService) {\n      this._ = _;\n      this.Log = Log;\n      this.items = items;\n      this.StorageService = StorageService;\n\n      this.itemsWithRequirements = StorageService.getQuizLeft();\n\n      if (this.itemsWithRequirements.length === 0) {\n        this.StorageService.setQuizLeft(this._.shuffle(this.items.filter(i => i.requirements && i.requirements.length > 0)));\n        this.itemsWithRequirements = this.StorageService.getQuizLeft();\n      }\n    }\n\n    getRandomQuiz() {\n      this.Log.log('Getting a random quiz...');\n\n      return new Promise(resolve => {\n        const item = _.cloneDeep(this.itemsWithRequirements.pop());\n\n\n        const wrong = _.cloneDeep(this._.sampleSize(this._.reject(this.items, i => i.name === item.name), 9 - item.requirements.length));\n\n        const quiz = {\n          target: item,\n          wrong: wrong\n        }\n\n        quiz.target.requirements.forEach((e, i) => {\n          quiz.target.requirements[i] = this.getItem(e);\n        });\n\n        this.Log.info('Quiz:', quiz);\n        this.Log.info(`${this.itemsWithRequirements.length} quizes left.`);\n\n        resolve(quiz);\n      });\n    }\n\n    getItem(name) {\n      const item = _.cloneDeep(this._.find(this.items, i => i.name.toLowerCase() === name.toLowerCase()));\n\n      if (!item) {\n        const error = new Error(`Item not found: ${name}`);\n        this.Log.error(error);\n        throw new Error(error);\n      }\n\n      return item;\n    }\n\n    reset() {\n      this.Log.info('Reseting quiz data...');\n      this.StorageService.setQuizLeft(this._.shuffle(this.items.filter(i => i.requirements && i.requirements.length > 0)));\n      this.itemsWithRequirements = this.StorageService.getQuizLeft();\n    }\n  }\n\n  angular\n    .module('dotaQuiz')\n    .service('DataService', DataService);\n\n})();\n","(function() {\n\n  class StorageService {\n   constructor($localStorage) {\n     this.$localStorage = $localStorage;\n   }\n\n   getStats() {\n     return this.$localStorage.stats;\n   }\n\n   setStats(stats) {\n     this.$localStorage.stats = stats;\n   }\n\n   deleteStats() {\n     delete this.$localStorage.stats;\n   }\n\n   getData() {\n     return this.$localStorage.data;\n   }\n\n   setData(data) {\n     this.$localStorage.data = data;\n   }\n\n   deleteData() {\n     delete this.$localStorage.data;\n   }\n\n   getQuizLeft() {\n     if (angular.isUndefined(this.$localStorage.quizLeft)) {\n       this.$localStorage.quizLeft = [];\n     }\n\n     return this.$localStorage.quizLeft;\n   }\n\n   setQuizLeft(quizLeft) {\n     this.$localStorage.quizLeft = quizLeft;\n   }\n\n   deleteQuizLeft() {\n     delete this.$localStorage.quizLeft;\n   }\n\n }\n\n  angular\n    .module('dotaQuiz')\n    .service('StorageService', StorageService);\n\n})();\n","(function() {\n\n  angular.module('dotaQuiz')\n    .config(dotaQuizConfig);\n\n  function dotaQuizConfig($stateProvider, $urlRouterProvider) {\n    // Ionic uses AngularUI Router which uses the concept of states\n    // Learn more here: https://github.com/angular-ui/ui-router\n    // Set up the various states which the app can be in.\n    // Each state's controller can be found in controllers.js\n\n    const appState = {\n      url: '/',\n      controller: 'AppController as appCtrl',\n      templateUrl: 'app/app.html'\n    }\n\n    $stateProvider\n      .state('app', appState);\n\n    // if none of the above states are matched, use this as the fallback\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n","'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('dotaQuiz', ['ui.router', 'ngResource', 'ngStorage', 'Lodash']);\n})();\n'use strict';\n\n(function () {\n\n  dotaQuizConfig.$inject = [\"$stateProvider\", \"$urlRouterProvider\"];\n  angular.module('dotaQuiz').config(dotaQuizConfig);\n\n  function dotaQuizConfig($stateProvider, $urlRouterProvider) {\n    // Ionic uses AngularUI Router which uses the concept of states\n    // Learn more here: https://github.com/angular-ui/ui-router\n    // Set up the various states which the app can be in.\n    // Each state's controller can be found in controllers.js\n\n    var appState = {\n      url: '/',\n      controller: 'AppController as appCtrl',\n      templateUrl: 'app/app.html'\n    };\n\n    $stateProvider.state('app', appState);\n\n    // if none of the above states are matched, use this as the fallback\n    $urlRouterProvider.otherwise('/');\n  }\n})();\n\"use strict\";\n\n(function () {\n\n  AppController.$inject = [\"Log\"];\n  angular.module(\"dotaQuiz\").controller(\"AppController\", AppController);\n\n  function AppController(Log) {\n    var vm = this;\n\n    vm.urlReport = \"\";\n    vm.updateReport = updateReport;\n\n    ////////////////\n\n    function updateReport() {\n\n      var template = \"# Description\\n\\n\\n# Log\\n```\\n<log-container>\\n```\\n\";\n      var logs = Log.getLogs().join(\"\\n\");\n\n      var report = encodeURIComponent(template.replace(\"<log-container>\", logs));\n\n      vm.urlReport = \"?labels=bug&body=\" + report;\n    }\n  }\n})();\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function () {\n\n  var items = [{\n    \"name\": \"Abyssal Blade\",\n    \"requirements\": [\"Sacred Relic\", \"Skull Basher\"]\n  }, {\n    \"name\": \"Aether Lens\",\n    \"requirements\": [\"Recipe\", \"Energy Booster\", \"Ring of Health\"]\n  }, {\n    \"name\": \"Aghanim's Scepter\",\n    \"requirements\": [\"Point Booster\", \"Ogre Club\", \"Blade of Alacrity\", \"Staff of Wizardry\"]\n  }, {\n    \"name\": \"Arcane Boots\",\n    \"requirements\": [\"Boots of Speed\", \"Energy Booster\"]\n  }, {\n    \"name\": \"Armlet of Mordiggian\",\n    \"requirements\": [\"Helm of Iron Will\", \"Gloves of Haste\", \"Blades of Attack\", \"Recipe\"]\n  }, {\n    \"name\": \"Assault Cuirass\",\n    \"requirements\": [\"Platemail\", \"Hyperstone\", \"Chainmail\", \"Recipe\"]\n  }, {\n    \"name\": \"Band of Elvenskin\"\n  }, {\n    \"name\": \"Battle Fury\",\n    \"requirements\": [\"Claymore\", \"Broadsword\", \"Perseverance\", \"Quelling Blade\"]\n  }, {\n    \"name\": \"Belt of Strength\"\n  }, {\n    \"name\": \"Black King Bar\",\n    \"requirements\": [\"Mithril Hammer\", \"Ogre Club\", \"Recipe\"]\n  }, {\n    \"name\": \"Blade Mail\",\n    \"requirements\": [\"Broadsword\", \"Chainmail\", \"Robe of the Magi\"]\n  }, {\n    \"name\": \"Blade of Alacrity\"\n  }, {\n    \"name\": \"Blades of Attack\"\n  }, {\n    \"name\": \"Blink Dagger\"\n  }, {\n    \"name\": \"Bloodstone\",\n    \"requirements\": [\"Soul Booster\", \"Soul Ring\", \"Recipe\"]\n  }, {\n    \"name\": \"Boots of Speed\"\n  }, {\n    \"name\": \"Boots of Travel\",\n    \"requirements\": [\"Boots of Speed\", \"Recipe\"]\n  }, {\n    \"name\": \"Bracer\",\n    \"requirements\": [\"Circlet\", \"Gauntlets of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Broadsword\"\n  }, {\n    \"name\": \"Buckler\",\n    \"requirements\": [\"Chainmail\", \"Iron Branch\", \"Recipe\"]\n  }, {\n    \"name\": \"Butterfly\",\n    \"requirements\": [\"Eaglesong\", \"Talisman of Evasion\", \"Quarterstaff\"]\n  }, {\n    \"name\": \"Chainmail\"\n  }, {\n    \"name\": \"Circlet\"\n  }, {\n    \"name\": \"Claymore\"\n  }, {\n    \"name\": \"Cloak\"\n  }, {\n    \"name\": \"Crimson Guard\",\n    \"requirements\": [\"Vanguard\", \"Buckler\", \"Recipe\"]\n  }, {\n    \"name\": \"Crystalys\",\n    \"requirements\": [\"Broadsword\", \"Blades of Attack\", \"Recipe\"]\n  }, {\n    \"name\": \"Daedalus\",\n    \"requirements\": [\"Crystalys\", \"Demon Edge\", \"Recipe\"]\n  }, {\n    \"name\": \"Dagon 1\",\n    \"requirements\": [\"Staff of Wizardry\", \"Null Talisman\", \"Recipe\"]\n  }, {\n    \"name\": \"Dagon 2\",\n    \"requirements\": [\"Dagon 1\", \"Recipe\"]\n  }, {\n    \"name\": \"Dagon 3\",\n    \"requirements\": [\"Dagon 2\", \"Recipe\"]\n  }, {\n    \"name\": \"Dagon 4\",\n    \"requirements\": [\"Dagon 3\", \"Recipe\"]\n  }, {\n    \"name\": \"Dagon 5\",\n    \"requirements\": [\"Dagon 4\", \"Recipe\"]\n  }, {\n    \"name\": \"Demon Edge\"\n  }, {\n    \"name\": \"Desolator\",\n    \"requirements\": [\"Mithril Hammer\", \"Mithril Hammer\", \"Recipe\"]\n  }, {\n    \"name\": \"Diffusal Blade 1\",\n    \"requirements\": [\"Blade of Alacrity\", \"Blade of Alacrity\", \"Robe of the Magi\", \"Recipe\"]\n  }, {\n    \"name\": \"Diffusal Blade 2\",\n    \"requirements\": [\"Diffusal Blade 1\", \"Recipe\"]\n  }, {\n    \"name\": \"Divine Rapier\",\n    \"requirements\": [\"Sacred Relic\", \"Demon Edge\"]\n  }, {\n    \"name\": \"Dragon Lance\",\n    \"requirements\": [\"Ogre Club\", \"Quarterstaff\"]\n  }, {\n    \"name\": \"Drum of Endurance\",\n    \"requirements\": [\"Bracer\", \"Robe of the Magi\", \"Recipe\"]\n  }, {\n    \"name\": \"Eaglesong\"\n  }, {\n    \"name\": \"Energy Booster\"\n  }, {\n    \"name\": \"Ethereal Blade\",\n    \"requirements\": [\"Eaglesong\", \"Ghost Scepter\"]\n  }, {\n    \"name\": \"Eul's Scepter of Divinity\",\n    \"requirements\": [\"Staff of Wizardry\", \"Sage's Mask\", \"Void Stone\", \"Recipe\"]\n  }, {\n    \"name\": \"Eye of Skadi\",\n    \"requirements\": [\"Ultimate Orb\", \"Ultimate Orb\", \"Point Booster\", \"Orb of Venom\"]\n  }, {\n    \"name\": \"Force Staff\",\n    \"requirements\": [\"Staff of Wizardry\", \"Ring of Regen\", \"Recipe\"]\n  }, {\n    \"name\": \"Gauntlets of Strength\"\n  }, {\n    \"name\": \"Ghost Scepter\"\n  }, {\n    \"name\": \"Glimmer Cape\",\n    \"requirements\": [\"Shadow Amulet\", \"Cloak\"]\n  }, {\n    \"name\": \"Gloves of Haste\"\n  }, {\n    \"name\": \"Guardian Greaves\",\n    \"requirements\": [\"Mekansm\", \"Arcane Boots\", \"Recipe\"]\n  }, {\n    \"name\": \"Hand of Midas\",\n    \"requirements\": [\"Gloves of Haste\", \"Recipe\"]\n  }, {\n    \"name\": \"Headdress\",\n    \"requirements\": [\"Ring of Regen\", \"Iron Branch\", \"Recipe\"]\n  }, {\n    \"name\": \"Heart of Tarrasque\",\n    \"requirements\": [\"Reaver\", \"Vitality Booster\", \"Recipe\"]\n  }, {\n    \"name\": \"Heaven's Halberd\",\n    \"requirements\": [\"Sange\", \"Talisman of Evasion\"]\n  }, {\n    \"name\": \"Helm of Iron Will\"\n  }, {\n    \"name\": \"Helm of The Dominator\",\n    \"requirements\": [\"Helm of Iron Will\", \"Morbid Mask\"]\n  }, {\n    \"name\": \"Hood of Defiance\",\n    \"requirements\": [\"Ring of Health\", \"Cloak\", \"Ring of Regen\", \"Ring of Regen\"]\n  }, {\n    \"name\": \"Hyperstone\"\n  }, {\n    \"name\": \"Iron Branch\"\n  }, {\n    \"name\": \"Iron Talon\",\n    \"requirements\": [\"Quelling Blade\", \"Ring of Protection\", \"Recipe\"]\n  }, {\n    \"name\": \"Javelin\"\n  }, {\n    \"name\": \"Linken's Sphere\",\n    \"requirements\": [\"Perseverance\", \"Ultimate Orb\", \"Recipe\"]\n  }, {\n    \"name\": \"Lotus Orb\",\n    \"requirements\": [\"Perseverance\", \"Platemail\", \"Recipe\"]\n  }, {\n    \"name\": \"Maelstrom\",\n    \"requirements\": [\"Mithril Hammer\", \"Gloves of Haste\", \"Recipe\"]\n  }, {\n    \"name\": \"Magic Stick\"\n  }, {\n    \"name\": \"Magic Wand\",\n    \"requirements\": [\"Magic Stick\", \"Iron Branch\", \"Iron Branch\", \"Circlet\"]\n  }, {\n    \"name\": \"Manta Style\",\n    \"requirements\": [\"Ultimate Orb\", \"Yasha\", \"Recipe\"]\n  }, {\n    \"name\": \"Mantle of Intelligence\"\n  }, {\n    \"name\": \"Mask of Madness\",\n    \"requirements\": [\"Morbid Mask\", \"Recipe\"]\n  }, {\n    \"name\": \"Medallion of Courage\",\n    \"requirements\": [\"Chainmail\", \"Sage's Mask\", \"Recipe\"]\n  }, {\n    \"name\": \"Mekansm\",\n    \"requirements\": [\"Buckler\", \"Headdress\", \"Recipe\"]\n  }, {\n    \"name\": \"Mithril Hammer\"\n  }, {\n    \"name\": \"Mjollnir\",\n    \"requirements\": [\"Hyperstone\", \"Maelstrom\", \"Recipe\"]\n  }, {\n    \"name\": \"Monkey King Bar\",\n    \"requirements\": [\"Javelin\", \"Javelin\", \"Demon Edge\"]\n  }, {\n    \"name\": \"Moon Shard\",\n    \"requirements\": [\"Hyperstone\", \"Hyperstone\"]\n  }, {\n    \"name\": \"Morbid Mask\"\n  }, {\n    \"name\": \"Mystic Staff\"\n  }, {\n    \"name\": \"Necronomicon 1\",\n    \"requirements\": [\"Staff of Wizardry\", \"Belt of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Necronomicon 2\",\n    \"requirements\": [\"Necronomicon 1\", \"Recipe\"]\n  }, {\n    \"name\": \"Necronomicon 3\",\n    \"requirements\": [\"Necronomicon 2\", \"Recipe\"]\n  }, {\n    \"name\": \"Null Talisman\",\n    \"requirements\": [\"Circlet\", \"Mantle of Intelligence\", \"Recipe\"]\n  }, {\n    \"name\": \"Oblivion Staff\",\n    \"requirements\": [\"Quarterstaff\", \"Robe of the Magi\", \"Sage's Mask\"]\n  }, {\n    \"name\": \"Octarine Core\",\n    \"requirements\": [\"Mystic Staff\", \"Soul Booster\"]\n  }, {\n    \"name\": \"Ogre Club\"\n  }, {\n    \"name\": \"Orb of Venom\"\n  }, {\n    \"name\": \"Orchid Malevolence\",\n    \"requirements\": [\"Oblivion Staff\", \"Oblivion Staff\", \"Recipe\"]\n  }, {\n    \"name\": \"Perseverance\",\n    \"requirements\": [\"Ring of Health\", \"Void Stone\"]\n  }, {\n    \"name\": \"Phase Boots\",\n    \"requirements\": [\"Boots of Speed\", \"Blades of Attack\", \"Blades of Attack\"]\n  }, {\n    \"name\": \"Pipe of Insight\",\n    \"requirements\": [\"Hood of Defiance\", \"Headdress\", \"Recipe\"]\n  }, {\n    \"name\": \"Platemail\"\n  }, {\n    \"name\": \"Point Booster\"\n  }, {\n    \"name\": \"Poor Man's Shield\",\n    \"requirements\": [\"Stout Shield\", \"Slippers of Agility\", \"Slippers of Agility\"]\n  }, {\n    \"name\": \"Power Treads Agi\",\n    \"requirements\": [\"Boots of Speed\", \"Gloves of Haste\", \"Band of Elvenskin\"]\n  }, {\n    \"name\": \"Power Treads Str\",\n    \"requirements\": [\"Boots of Speed\", \"Gloves of Haste\", \"Belt of Strength\"]\n  }, {\n    \"name\": \"Power Treads Int\",\n    \"requirements\": [\"Boots of Speed\", \"Gloves of Haste\", \"Robe of the Magi\"]\n  }, {\n    \"name\": \"Quarterstaff\"\n  }, {\n    \"name\": \"Quelling Blade\"\n  }, {\n    \"name\": \"Radiance\",\n    \"requirements\": [\"Sacred Relic\", \"Recipe\"]\n  }, {\n    \"name\": \"Reaver\"\n  }, {\n    \"name\": \"Recipe\"\n  }, {\n    \"name\": \"Refresher Orb\",\n    \"requirements\": [\"Perseverance\", \"Perseverance\", \"Recipe\"]\n  }, {\n    \"name\": \"Ring of Aquila\",\n    \"requirements\": [\"Wraith Band\", \"Ring of Basilius\"]\n  }, {\n    \"name\": \"Ring of Basilius\",\n    \"requirements\": [\"Sage's Mask\", \"Ring of Protection\"]\n  }, {\n    \"name\": \"Ring of Health\"\n  }, {\n    \"name\": \"Ring of Protection\"\n  }, {\n    \"name\": \"Ring of Regen\"\n  }, {\n    \"name\": \"Robe of The Magi\"\n  }, {\n    \"name\": \"Rod of Atos\",\n    \"requirements\": [\"Staff of Wizardry\", \"Staff of Wizardry\", \"Vitality Booster\"]\n  }, {\n    \"name\": \"Sacred Relic\"\n  }, {\n    \"name\": \"Sage's Mask\"\n  }, {\n    \"name\": \"Sange\",\n    \"requirements\": [\"Ogre Club\", \"Belt of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Sange And Yasha\",\n    \"requirements\": [\"Sange\", \"Yasha\"]\n  }, {\n    \"name\": \"Satanic\",\n    \"requirements\": [\"Reaver\", \"Helm of the Dominator\", \"Recipe\"]\n  }, {\n    \"name\": \"Scythe of Vyse\",\n    \"requirements\": [\"Mystic Staff\", \"Ultimate Orb\", \"Void Stone\"]\n  }, {\n    \"name\": \"Shadow Amulet\"\n  }, {\n    \"name\": \"Shadow Blade\",\n    \"requirements\": [\"Claymore\", \"Shadow Amulet\"]\n  }, {\n    \"name\": \"Shiva's Guard\",\n    \"requirements\": [\"Mystic Staff\", \"Platemail\", \"Recipe\"]\n  }, {\n    \"name\": \"Silver Edge\",\n    \"requirements\": [\"Shadow Blade\", \"Sange\", \"Recipe\"]\n  }, {\n    \"name\": \"Skull Basher\",\n    \"requirements\": [\"Javelin\", \"Belt of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Slippers of Agility\"\n  }, {\n    \"name\": \"Solar Crest\",\n    \"requirements\": [\"Medallion of Courage\", \"Talisman of Evasion\"]\n  }, {\n    \"name\": \"Soul Booster\",\n    \"requirements\": [\"Point Booster\", \"Vitality Booster\", \"Energy Booster\"]\n  }, {\n    \"name\": \"Soul Ring\",\n    \"requirements\": [\"Ring of Regen\", \"Sage's Mask\", \"Recipe\"]\n  }, {\n    \"name\": \"Staff of Wizardry\"\n  }, {\n    \"name\": \"Stout Shield\"\n  }, {\n    \"name\": \"Talisman of Evasion\"\n  }, {\n    \"name\": \"Tranquil Boots\",\n    \"requirements\": [\"Boots of Speed\", \"Ring of Protection\", \"Ring of Regen\"]\n  }, {\n    \"name\": \"Ultimate Orb\"\n  }, {\n    \"name\": \"Urn of Shadows\",\n    \"requirements\": [\"Sage's Mask\", \"Gauntlets of Strength\", \"Gauntlets of Strength\", \"Recipe\"]\n  }, {\n    \"name\": \"Vanguard\",\n    \"requirements\": [\"Ring of Health\", \"Vitality Booster\", \"Stout Shield\"]\n  }, {\n    \"name\": \"Veil of Discord\",\n    \"requirements\": [\"Helm of Iron Will\", \"Null Talisman\", \"Robe of the Magi\", \"Robe of the Magi\"]\n  }, {\n    \"name\": \"Vitality Booster\"\n  }, {\n    \"name\": \"Vladmir's Offering\",\n    \"requirements\": [\"Morbid Mask\", \"Ring of Basilius\", \"Headdress\", \"Recipe\"]\n  }, {\n    \"name\": \"Void Stone\"\n  }, {\n    \"name\": \"Wraith Band\",\n    \"requirements\": [\"Circlet\", \"Slippers of Agility\", \"Recipe\"]\n  }, {\n    \"name\": \"Yasha\",\n    \"requirements\": [\"Blade of Alacrity\", \"Band of Elvenskin\", \"Recipe\"]\n  }];\n\n  var DataService = function () {\n    DataService.$inject = [\"_\", \"Log\", \"StorageService\"];\n    function DataService(_, Log, StorageService) {\n      _classCallCheck(this, DataService);\n\n      this._ = _;\n      this.Log = Log;\n      this.items = items;\n      this.StorageService = StorageService;\n\n      this.itemsWithRequirements = StorageService.getQuizLeft();\n\n      if (this.itemsWithRequirements.length === 0) {\n        this.StorageService.setQuizLeft(this._.shuffle(this.items.filter(function (i) {\n          return i.requirements && i.requirements.length > 0;\n        })));\n        this.itemsWithRequirements = this.StorageService.getQuizLeft();\n      }\n    }\n\n    _createClass(DataService, [{\n      key: \"getRandomQuiz\",\n      value: function getRandomQuiz() {\n        var _this = this;\n\n        this.Log.log('Getting a random quiz...');\n\n        return new Promise(function (resolve) {\n          var item = _.cloneDeep(_this.itemsWithRequirements.pop());\n\n          var wrong = _.cloneDeep(_this._.sampleSize(_this._.reject(_this.items, function (i) {\n            return i.name === item.name;\n          }), 9 - item.requirements.length));\n\n          var quiz = {\n            target: item,\n            wrong: wrong\n          };\n\n          quiz.target.requirements.forEach(function (e, i) {\n            quiz.target.requirements[i] = _this.getItem(e);\n          });\n\n          _this.Log.info('Quiz:', quiz);\n          _this.Log.info(_this.itemsWithRequirements.length + \" quizes left.\");\n\n          resolve(quiz);\n        });\n      }\n    }, {\n      key: \"getItem\",\n      value: function getItem(name) {\n        var item = _.cloneDeep(this._.find(this.items, function (i) {\n          return i.name.toLowerCase() === name.toLowerCase();\n        }));\n\n        if (!item) {\n          var error = new Error(\"Item not found: \" + name);\n          this.Log.error(error);\n          throw new Error(error);\n        }\n\n        return item;\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.Log.info('Reseting quiz data...');\n        this.StorageService.setQuizLeft(this._.shuffle(this.items.filter(function (i) {\n          return i.requirements && i.requirements.length > 0;\n        })));\n        this.itemsWithRequirements = this.StorageService.getQuizLeft();\n      }\n    }]);\n\n    return DataService;\n  }();\n\n  angular.module('dotaQuiz').service('DataService', DataService);\n})();\n'use strict';\n\n(function () {\n\n  /**\n   * Lodash wrapper module.\n   *\n   * @ngdoc module\n   * @name Lodash\n   */\n  Lodash.$inject = [\"$window\"];\n  angular.module('Lodash', []).factory('_', Lodash);\n\n  /**\n    * Expose Lo-Dash through injectable factory, so we don't pollute / rely on global namespace\n    * just inject lodash as Lodash.\n    *\n    * @ngdoc factory\n    * @name _\n    * @memberof Lodash\n    */\n  function Lodash($window) {\n    return $window._;\n  }\n})();\n'use strict';\n\n(function () {\n\n  LogService.$inject = [\"$log\"];\n  angular.module('dotaQuiz').service('Log', LogService);\n\n  function LogService($log) {\n    var logs = [];\n\n    var service = {\n      log: log,\n      info: info,\n      error: error,\n      warn: warn,\n      getLogs: getLogs\n    };\n\n    return service;\n\n    ///////////////////\n\n    function log() {\n      for (var _len = arguments.length, message = Array(_len), _key = 0; _key < _len; _key++) {\n        message[_key] = arguments[_key];\n      }\n\n      add.apply(undefined, ['log:'].concat(message));\n      $log.log.apply($log, ['log:'].concat(message));\n    }\n\n    function info() {\n      for (var _len2 = arguments.length, message = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        message[_key2] = arguments[_key2];\n      }\n\n      add.apply(undefined, ['info:'].concat(message));\n      $log.info.apply($log, ['info:'].concat(message));\n    }\n\n    function error() {\n      for (var _len3 = arguments.length, message = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        message[_key3] = arguments[_key3];\n      }\n\n      add.apply(undefined, ['error:'].concat(message));\n      $log.error.apply($log, ['error:'].concat(message));\n    }\n\n    function warn() {\n      for (var _len4 = arguments.length, message = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        message[_key4] = arguments[_key4];\n      }\n\n      add.apply(undefined, ['warn:'].concat(message));\n      $log.warn.apply($log, ['warn:'].concat(message));\n    }\n\n    function add() {\n      for (var _len5 = arguments.length, log = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        log[_key5] = arguments[_key5];\n      }\n\n      logs.push(log.map(function (e) {\n        return angular.toJson(e, true);\n      }).join(' '));\n\n      if (logs.length > 50) {\n        logs.shift();\n      }\n    }\n\n    function getLogs() {\n      return logs;\n    }\n  }\n})();\n'use strict';\n\n(function () {\n\n  StatsController.$inject = [\"StatsFactory\"];\n  angular.module('dotaQuiz').component('stats', {\n    controller: StatsController,\n    templateUrl: 'stats/stats.html'\n  });\n\n  function StatsController(StatsFactory) {\n    var vm = this;\n\n    vm.data = StatsFactory.data;\n  }\n})();\n'use strict';\n\n(function () {\n\n  StatsFactory.$inject = [\"Log\", \"StorageService\"];\n  angular.module('dotaQuiz').factory('StatsFactory', StatsFactory);\n\n  function StatsFactory(Log, StorageService) {\n    var _DefaultStats = {\n      inRow: 0,\n      score: 0,\n      guesses: 3\n    };\n\n    var factory = {\n      start: start,\n      reset: reset,\n      correct: correct,\n      incorrect: incorrect,\n      getScore: getScore,\n      data: {}\n    };\n\n    return factory;\n\n    ///////////////////\n\n    function start() {\n      if (angular.isUndefined(StorageService.getStats())) {\n        StorageService.setStats(_DefaultStats);\n        Log.info('Stats not found in localStorage, creating a new one.');\n      } else {\n        Log.info('Stats found in localStorage, using it.');\n      }\n\n      factory.data = StorageService.getStats();\n    }\n\n    function reset() {\n      Log.info('Reseting Stats...');\n      _.assign(factory.data, _DefaultStats);\n    }\n\n    function incorrect() {\n      factory.data.guesses -= 1;\n      factory.data.inRow = 0;\n\n      return factory.data.guesses;\n    }\n\n    function correct() {\n      var base = 200;\n      var bonus = 30;\n\n      factory.data.score += base + bonus * factory.data.inRow;\n      factory.data.inRow += 1;\n    }\n\n    function getScore() {\n      return factory.data.score;\n    }\n  }\n})();\n'use strict';\n\n(function () {\n\n  QuizController.$inject = [\"QuizFactory\"];\n  angular.module('dotaQuiz').component('quiz', {\n    controller: QuizController,\n    templateUrl: 'quiz/quiz.html'\n  });\n\n  function QuizController(QuizFactory) {\n    var vm = this;\n\n    vm.data = QuizFactory.data;\n    vm.select = QuizFactory.select;\n    vm.unselect = QuizFactory.unselect;\n\n    activate();\n\n    ///////////////\n\n    function activate() {\n      QuizFactory.start();\n    }\n  }\n})();\n'use strict';\n\n(function () {\n\n  QuizFactory.$inject = [\"$rootScope\", \"_\", \"Log\", \"DataService\", \"StatsFactory\", \"StorageService\"];\n  angular.module('dotaQuiz').factory('QuizFactory', QuizFactory);\n\n  function QuizFactory($rootScope, _, Log, DataService, StatsFactory, StorageService) {\n    var _unknownObject = {\n      icon: 'assets/images/icon/unknown.png',\n      alt: 'Unknown Icon',\n      unknown: true\n    };\n\n    var factory = {\n      select: select,\n      unselect: unselect,\n      start: start,\n      data: {}\n    };\n\n    return factory;\n\n    ///////////////////\n\n    function start() {\n      StatsFactory.start();\n\n      if (angular.isDefined(StorageService.getData())) {\n        Log.info('Quiz found in localStorage, using it.');\n        // skip fetch if there already a quiz in loca storage\n        _.assign(factory.data, StorageService.getData());\n      } else {\n        _fetchQuiz();\n      }\n    }\n\n    function _reset() {\n      DataService.reset();\n      StatsFactory.reset();\n      _fetchQuiz();\n    }\n\n    function select(item) {\n      if (!item.selected) {\n        Log.info('Item selected:', item);\n\n        for (var i in factory.data.answers) {\n          if (factory.data.answers[i].unknown === true) {\n            item.selected = true;\n            factory.data.answers[i] = item;\n            break;\n          }\n        }\n\n        if (_answerComplete()) {\n          _validateAnswer();\n        }\n      }\n    }\n\n    function unselect(index) {\n      var item = factory.data.answers[index];\n\n      if (!item.unknown) {\n        Log.info('Item unselected:', item);\n\n        item.selected = false;\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = factory.data.choices[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n\n            if (i.index === item.index) {\n              i.selected = false;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        factory.data.answers[index] = _.cloneDeep(_unknownObject);\n      }\n    }\n\n    function _fetchQuiz() {\n      DataService.getRandomQuiz().then(function (quiz) {\n        _populateData(quiz);\n        $rootScope.$digest();\n      });\n    }\n\n    function _populateData(quiz) {\n      Log.info('Updating UI with new Quiz');\n\n      quiz.target.icon = _getIconName(quiz.target.name);\n\n      var answers = quiz.target.requirements.map(function (req) {\n        return _.cloneDeep(_unknownObject);\n      });\n      var choices = _.shuffle(_.concat(quiz.target.requirements, quiz.wrong));\n      choices.forEach(function (c, i) {\n        c.icon = _getIconName(c.name);\n        c.index = i;\n      });\n\n      factory.data.target = quiz.target;\n      factory.data.answers = answers;\n      factory.data.choices = choices;\n\n      StorageService.setData(factory.data);\n    }\n\n    function _getIconName(name) {\n      var iconName = name.toLowerCase().replace(/ /g, '_');\n      return 'assets/images/icon/' + iconName + '.png';\n    }\n\n    function _answerComplete() {\n      var complete = true;\n\n      factory.data.answers.forEach(function (answer) {\n        if (answer.unknown === true) {\n          complete = false;\n        }\n      });\n\n      return complete;\n    }\n\n    function _validateAnswer() {\n      var answer = _.sortBy(factory.data.answers.map(function (answer) {\n        return answer.name;\n      }), function (e) {\n        return e;\n      });\n      var requirements = _.sortBy(factory.data.target.requirements.map(function (requirement) {\n        return requirement.name;\n      }), function (e) {\n        return e;\n      });\n\n      var answerCorrect = _.isEqual(answer, requirements);\n\n      if (answerCorrect) {\n        _handleCorrectAnswer();\n      } else {\n        _handleIncorrectAnswer();\n      }\n    }\n\n    function _handleCorrectAnswer() {\n      Log.info('Correct answer.');\n      StatsFactory.correct();\n\n      if (StorageService.getQuizLeft().length > 0) {\n        _fetchQuiz();\n      } else {\n        Log.info('No quiz left, end of the game.');\n        alert('Congratulation! You finished the Quiz with: ' + StatsFactory.getScore());\n        _reset();\n      }\n    }\n\n    function _handleIncorrectAnswer() {\n      Log.info('Wrong answer.');\n\n      var guessesLeft = StatsFactory.incorrect();\n\n      Log.info('Guesses: ' + guessesLeft);\n\n      if (guessesLeft <= 0) {\n        Log.info('You lose.');\n        alert('Final Score: ' + StatsFactory.getScore());\n        _reset();\n      }\n    }\n  }\n})();\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function () {\n  var StorageService = function () {\n    StorageService.$inject = [\"$localStorage\"];\n    function StorageService($localStorage) {\n      _classCallCheck(this, StorageService);\n\n      this.$localStorage = $localStorage;\n    }\n\n    _createClass(StorageService, [{\n      key: 'getStats',\n      value: function getStats() {\n        return this.$localStorage.stats;\n      }\n    }, {\n      key: 'setStats',\n      value: function setStats(stats) {\n        this.$localStorage.stats = stats;\n      }\n    }, {\n      key: 'deleteStats',\n      value: function deleteStats() {\n        delete this.$localStorage.stats;\n      }\n    }, {\n      key: 'getData',\n      value: function getData() {\n        return this.$localStorage.data;\n      }\n    }, {\n      key: 'setData',\n      value: function setData(data) {\n        this.$localStorage.data = data;\n      }\n    }, {\n      key: 'deleteData',\n      value: function deleteData() {\n        delete this.$localStorage.data;\n      }\n    }, {\n      key: 'getQuizLeft',\n      value: function getQuizLeft() {\n        if (angular.isUndefined(this.$localStorage.quizLeft)) {\n          this.$localStorage.quizLeft = [];\n        }\n\n        return this.$localStorage.quizLeft;\n      }\n    }, {\n      key: 'setQuizLeft',\n      value: function setQuizLeft(quizLeft) {\n        this.$localStorage.quizLeft = quizLeft;\n      }\n    }, {\n      key: 'deleteQuizLeft',\n      value: function deleteQuizLeft() {\n        delete this.$localStorage.quizLeft;\n      }\n    }]);\n\n    return StorageService;\n  }();\n\n  angular.module('dotaQuiz').service('StorageService', StorageService);\n})();","(function() {\n\n  angular\n    .module(`dotaQuiz`)\n    .controller(`AppController`, AppController);\n\n  function AppController(Log) {\n    const vm = this;\n\n    vm.urlReport = ``;\n    vm.updateReport = updateReport;\n\n    ////////////////\n\n    function updateReport() {\n\n      const template = `# Description\n\n\n# Log\n\\`\\`\\`\n<log-container>\n\\`\\`\\`\n`\n      const logs = Log.getLogs().join(`\\n`);\n\n      const report = encodeURIComponent(template.replace(`<log-container>`, logs));\n\n      vm.urlReport = `?labels=bug&body=${report}`;\n    }\n  }\n\n})();\n","(function() {\n\n  /**\n   * Lodash wrapper module.\n   *\n   * @ngdoc module\n   * @name Lodash\n   */\n  angular\n    .module('Lodash', [])\n    .factory('_', Lodash);\n\n  /**\n    * Expose Lo-Dash through injectable factory, so we don't pollute / rely on global namespace\n    * just inject lodash as Lodash.\n    *\n    * @ngdoc factory\n    * @name _\n    * @memberof Lodash\n    */\n  function Lodash($window) {\n      return $window._;\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .service('Log', LogService);\n\n  function LogService($log) {\n    const logs = [];\n\n    const service = {\n      log: log,\n      info: info,\n      error: error,\n      warn: warn,\n      getLogs: getLogs\n    }\n\n    return service;\n\n    ///////////////////\n\n    function log(...message) {\n      add(`log:`, ...message);\n      $log.log(`log:`, ...message);\n    }\n\n    function info(...message) {\n      add(`info:`, ...message);\n      $log.info(`info:`, ...message);\n    }\n\n    function error(...message) {\n      add(`error:`, ...message);\n      $log.error(`error:`, ...message);\n    }\n\n    function warn(...message) {\n      add(`warn:`, ...message);\n      $log.warn(`warn:`, ...message);\n    }\n\n    function add(...log) {\n      logs.push(log.map(e => angular.toJson(e, true)).join(' '));\n\n      if (logs.length > 50) {\n        logs.shift();\n      }\n    }\n\n    function getLogs() {\n      return logs;\n    }\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .component('stats', {\n      controller: StatsController,\n      templateUrl: 'stats/stats.html'\n    });\n\n  function StatsController(StatsFactory) {\n    const vm = this;\n\n    vm.data = StatsFactory.data;\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .factory('StatsFactory', StatsFactory);\n\n  function StatsFactory(Log, StorageService) {\n    const _DefaultStats = {\n      inRow: 0,\n      score: 0,\n      guesses: 3\n    }\n\n    const factory = {\n      start: start,\n      reset: reset,\n      correct: correct,\n      incorrect: incorrect,\n      getScore: getScore,\n      data: {}\n    }\n\n    return factory;\n\n    ///////////////////\n\n    function start() {\n      if (angular.isUndefined(StorageService.getStats())) {\n        StorageService.setStats(_DefaultStats);\n        Log.info('Stats not found in localStorage, creating a new one.');\n      } else {\n        Log.info('Stats found in localStorage, using it.');\n      }\n\n      factory.data = StorageService.getStats();\n    }\n\n    function reset() {\n      Log.info('Reseting Stats...');\n      _.assign(factory.data, _DefaultStats);\n    }\n\n    function incorrect() {\n      factory.data.guesses -= 1;\n      factory.data.inRow = 0;\n\n      return factory.data.guesses;\n    }\n\n    function correct() {\n      const base = 200;\n      const bonus = 30;\n\n      factory.data.score += base + (bonus * factory.data.inRow);\n      factory.data.inRow += 1;\n    }\n\n    function getScore() {\n      return factory.data.score;\n    }\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .component('quiz', {\n      controller: QuizController,\n      templateUrl: 'quiz/quiz.html'\n    });\n\n  function QuizController(QuizFactory) {\n    const vm = this;\n\n    vm.data = QuizFactory.data;\n    vm.select = QuizFactory.select;\n    vm.unselect = QuizFactory.unselect;\n\n    activate();\n\n    ///////////////\n\n    function activate() {\n      QuizFactory.start();\n    }\n\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('dotaQuiz')\n    .factory('QuizFactory', QuizFactory);\n\n  function QuizFactory($rootScope, _, Log, DataService, StatsFactory, StorageService) {\n    const _unknownObject = {\n      icon: 'assets/images/icon/unknown.png',\n      alt: 'Unknown Icon',\n      unknown: true\n    };\n\n    const factory = {\n      select: select,\n      unselect: unselect,\n      start: start,\n      data: {}\n    }\n\n    return factory;\n\n    ///////////////////\n\n    function start() {\n      StatsFactory.start();\n\n      if (angular.isDefined(StorageService.getData())) {\n        Log.info('Quiz found in localStorage, using it.');\n        // skip fetch if there already a quiz in loca storage\n        _.assign(factory.data, StorageService.getData());\n      } else {\n        _fetchQuiz();\n      }\n    }\n\n    function _reset() {\n      DataService.reset();\n      StatsFactory.reset();\n      _fetchQuiz();\n    }\n\n    function select(item) {\n      if (!item.selected) {\n        Log.info(`Item selected:`, item);\n\n        for (let i in factory.data.answers) {\n          if (factory.data.answers[i].unknown === true) {\n            item.selected = true;\n            factory.data.answers[i] = item;\n            break;\n          }\n        }\n\n        if (_answerComplete()) {\n          _validateAnswer();\n        }\n      }\n    }\n\n    function unselect(index) {\n      let item = factory.data.answers[index];\n\n      if (!item.unknown) {\n        Log.info(`Item unselected:`, item);\n\n        item.selected = false;\n\n        for (let i of factory.data.choices) {\n          if (i.index === item.index) {\n            i.selected = false;\n          }\n        }\n\n        factory.data.answers[index] = _.cloneDeep(_unknownObject);\n      }\n    }\n\n    function _fetchQuiz() {\n      DataService.getRandomQuiz().then(quiz => {\n        _populateData(quiz);\n        $rootScope.$digest();\n      });\n    }\n\n    function _populateData(quiz) {\n      Log.info('Updating UI with new Quiz');\n\n      quiz.target.icon = _getIconName(quiz.target.name);\n\n      const answers = quiz.target.requirements.map(req => _.cloneDeep(_unknownObject));\n      const choices = _.shuffle(_.concat(quiz.target.requirements, quiz.wrong));\n      choices.forEach((c, i) => {\n        c.icon = _getIconName(c.name)\n        c.index = i;\n      });\n\n      factory.data.target = quiz.target;\n      factory.data.answers = answers;\n      factory.data.choices = choices;\n\n      StorageService.setData(factory.data);\n    }\n\n    function _getIconName(name) {\n      const iconName = name.toLowerCase().replace(/ /g, '_');\n      return `assets/images/icon/${iconName}.png`;\n    }\n\n    function _answerComplete() {\n      let complete = true;\n\n      factory.data.answers.forEach(answer => {\n        if (answer.unknown === true) {\n          complete = false;\n        }\n      });\n\n      return complete;\n    }\n\n    function _validateAnswer() {\n      const answer = _.sortBy(factory.data.answers.map(answer => answer.name), e => e);\n      const requirements = _.sortBy(factory.data.target.requirements.map(requirement => requirement.name), e => e);\n\n      const answerCorrect = _.isEqual(answer, requirements);\n\n      if (answerCorrect) {\n        _handleCorrectAnswer();\n      } else {\n        _handleIncorrectAnswer();\n      }\n    }\n\n    function _handleCorrectAnswer() {\n      Log.info('Correct answer.');\n      StatsFactory.correct();\n\n      if (StorageService.getQuizLeft().length > 0) {\n        _fetchQuiz();\n      } else {\n        Log.info('No quiz left, end of the game.');\n        alert(`Congratulation! You finished the Quiz with: ${StatsFactory.getScore()}`);\n        _reset();\n      }\n    }\n\n    function _handleIncorrectAnswer() {\n      Log.info('Wrong answer.');\n\n      const guessesLeft = StatsFactory.incorrect();\n\n      Log.info(`Guesses: ${guessesLeft}`);\n\n      if (guessesLeft <= 0) {\n        Log.info(`You lose.`);\n        alert(`Final Score: ${StatsFactory.getScore()}`);\n        _reset();\n      }\n    }\n  }\n\n})();\n"],"sourceRoot":"/source/"}